//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace P2k7.Api.QueuesystemWebSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QueueSystemSoap", Namespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/")]
    public partial class QueueSystem : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback CancelJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelJobSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelCorrelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobCompletionStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnblockCorrelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetryJobOperationCompleted;
        
        private System.Threading.SendOrPostCallback RetryCorrelationOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueuePurgeArchivedJobsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProposedJobWaitTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobGroupWaitTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobGroupWaitTimeSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobWaitTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadAllJobStatusSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadAllJobStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadProjectJobStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadMyJobStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMyJobCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadJobStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadJobStatusSimpleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetJobCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadQueueConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetQueueConfigurationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PurgeQueueStatisticsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QueueSystem() {
            this.Url = global::P2k7.Api.Properties.Settings.Default.P2k7_Api_QueuesystemWebSvc_QueueSystem;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event CancelJobCompletedEventHandler CancelJobCompleted;
        
        /// <remarks/>
        public event CancelJobSimpleCompletedEventHandler CancelJobSimpleCompleted;
        
        /// <remarks/>
        public event CancelCorrelationCompletedEventHandler CancelCorrelationCompleted;
        
        /// <remarks/>
        public event GetJobCompletionStateCompletedEventHandler GetJobCompletionStateCompleted;
        
        /// <remarks/>
        public event UnblockCorrelationCompletedEventHandler UnblockCorrelationCompleted;
        
        /// <remarks/>
        public event RetryJobCompletedEventHandler RetryJobCompleted;
        
        /// <remarks/>
        public event RetryCorrelationCompletedEventHandler RetryCorrelationCompleted;
        
        /// <remarks/>
        public event QueuePurgeArchivedJobsCompletedEventHandler QueuePurgeArchivedJobsCompleted;
        
        /// <remarks/>
        public event GetProposedJobWaitTimeCompletedEventHandler GetProposedJobWaitTimeCompleted;
        
        /// <remarks/>
        public event GetJobGroupWaitTimeCompletedEventHandler GetJobGroupWaitTimeCompleted;
        
        /// <remarks/>
        public event GetJobGroupWaitTimeSimpleCompletedEventHandler GetJobGroupWaitTimeSimpleCompleted;
        
        /// <remarks/>
        public event GetJobWaitTimeCompletedEventHandler GetJobWaitTimeCompleted;
        
        /// <remarks/>
        public event ReadAllJobStatusSimpleCompletedEventHandler ReadAllJobStatusSimpleCompleted;
        
        /// <remarks/>
        public event ReadAllJobStatusCompletedEventHandler ReadAllJobStatusCompleted;
        
        /// <remarks/>
        public event ReadProjectJobStatusCompletedEventHandler ReadProjectJobStatusCompleted;
        
        /// <remarks/>
        public event ReadMyJobStatusCompletedEventHandler ReadMyJobStatusCompleted;
        
        /// <remarks/>
        public event GetMyJobCountCompletedEventHandler GetMyJobCountCompleted;
        
        /// <remarks/>
        public event ReadJobStatusCompletedEventHandler ReadJobStatusCompleted;
        
        /// <remarks/>
        public event ReadJobStatusSimpleCompletedEventHandler ReadJobStatusSimpleCompleted;
        
        /// <remarks/>
        public event GetJobCountCompletedEventHandler GetJobCountCompleted;
        
        /// <remarks/>
        public event ReadQueueConfigurationCompletedEventHandler ReadQueueConfigurationCompleted;
        
        /// <remarks/>
        public event SetQueueConfigurationCompletedEventHandler SetQueueConfigurationCompleted;
        
        /// <remarks/>
        public event PurgeQueueStatisticsCompletedEventHandler PurgeQueueStatisticsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/Cancel" +
            "Job", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelJob(System.Guid jobUID, bool cancelCorrelationJobs, bool cancelSendIncompleteJobs) {
            this.Invoke("CancelJob", new object[] {
                        jobUID,
                        cancelCorrelationJobs,
                        cancelSendIncompleteJobs});
        }
        
        /// <remarks/>
        public void CancelJobAsync(System.Guid jobUID, bool cancelCorrelationJobs, bool cancelSendIncompleteJobs) {
            this.CancelJobAsync(jobUID, cancelCorrelationJobs, cancelSendIncompleteJobs, null);
        }
        
        /// <remarks/>
        public void CancelJobAsync(System.Guid jobUID, bool cancelCorrelationJobs, bool cancelSendIncompleteJobs, object userState) {
            if ((this.CancelJobOperationCompleted == null)) {
                this.CancelJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelJobOperationCompleted);
            }
            this.InvokeAsync("CancelJob", new object[] {
                        jobUID,
                        cancelCorrelationJobs,
                        cancelSendIncompleteJobs}, this.CancelJobOperationCompleted, userState);
        }
        
        private void OnCancelJobOperationCompleted(object arg) {
            if ((this.CancelJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/Cancel" +
            "JobSimple", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelJobSimple(System.Guid jobUID) {
            this.Invoke("CancelJobSimple", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void CancelJobSimpleAsync(System.Guid jobUID) {
            this.CancelJobSimpleAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void CancelJobSimpleAsync(System.Guid jobUID, object userState) {
            if ((this.CancelJobSimpleOperationCompleted == null)) {
                this.CancelJobSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelJobSimpleOperationCompleted);
            }
            this.InvokeAsync("CancelJobSimple", new object[] {
                        jobUID}, this.CancelJobSimpleOperationCompleted, userState);
        }
        
        private void OnCancelJobSimpleOperationCompleted(object arg) {
            if ((this.CancelJobSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelJobSimpleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/Cancel" +
            "Correlation", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelCorrelation(System.Guid correlationUID, bool cancelSendIncompleteJobs) {
            this.Invoke("CancelCorrelation", new object[] {
                        correlationUID,
                        cancelSendIncompleteJobs});
        }
        
        /// <remarks/>
        public void CancelCorrelationAsync(System.Guid correlationUID, bool cancelSendIncompleteJobs) {
            this.CancelCorrelationAsync(correlationUID, cancelSendIncompleteJobs, null);
        }
        
        /// <remarks/>
        public void CancelCorrelationAsync(System.Guid correlationUID, bool cancelSendIncompleteJobs, object userState) {
            if ((this.CancelCorrelationOperationCompleted == null)) {
                this.CancelCorrelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelCorrelationOperationCompleted);
            }
            this.InvokeAsync("CancelCorrelation", new object[] {
                        correlationUID,
                        cancelSendIncompleteJobs}, this.CancelCorrelationOperationCompleted, userState);
        }
        
        private void OnCancelCorrelationOperationCompleted(object arg) {
            if ((this.CancelCorrelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelCorrelationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/GetJob" +
            "CompletionState", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public JobState GetJobCompletionState(System.Guid jobUID, out string errorString) {
            object[] results = this.Invoke("GetJobCompletionState", new object[] {
                        jobUID});
            errorString = ((string)(results[1]));
            return ((JobState)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobCompletionStateAsync(System.Guid jobUID) {
            this.GetJobCompletionStateAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void GetJobCompletionStateAsync(System.Guid jobUID, object userState) {
            if ((this.GetJobCompletionStateOperationCompleted == null)) {
                this.GetJobCompletionStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobCompletionStateOperationCompleted);
            }
            this.InvokeAsync("GetJobCompletionState", new object[] {
                        jobUID}, this.GetJobCompletionStateOperationCompleted, userState);
        }
        
        private void OnGetJobCompletionStateOperationCompleted(object arg) {
            if ((this.GetJobCompletionStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobCompletionStateCompleted(this, new GetJobCompletionStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/Unbloc" +
            "kCorrelation", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UnblockCorrelation(System.Guid correlationGUID) {
            this.Invoke("UnblockCorrelation", new object[] {
                        correlationGUID});
        }
        
        /// <remarks/>
        public void UnblockCorrelationAsync(System.Guid correlationGUID) {
            this.UnblockCorrelationAsync(correlationGUID, null);
        }
        
        /// <remarks/>
        public void UnblockCorrelationAsync(System.Guid correlationGUID, object userState) {
            if ((this.UnblockCorrelationOperationCompleted == null)) {
                this.UnblockCorrelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnblockCorrelationOperationCompleted);
            }
            this.InvokeAsync("UnblockCorrelation", new object[] {
                        correlationGUID}, this.UnblockCorrelationOperationCompleted, userState);
        }
        
        private void OnUnblockCorrelationOperationCompleted(object arg) {
            if ((this.UnblockCorrelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnblockCorrelationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/RetryJ" +
            "ob", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RetryJob(System.Guid JobGUID) {
            this.Invoke("RetryJob", new object[] {
                        JobGUID});
        }
        
        /// <remarks/>
        public void RetryJobAsync(System.Guid JobGUID) {
            this.RetryJobAsync(JobGUID, null);
        }
        
        /// <remarks/>
        public void RetryJobAsync(System.Guid JobGUID, object userState) {
            if ((this.RetryJobOperationCompleted == null)) {
                this.RetryJobOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetryJobOperationCompleted);
            }
            this.InvokeAsync("RetryJob", new object[] {
                        JobGUID}, this.RetryJobOperationCompleted, userState);
        }
        
        private void OnRetryJobOperationCompleted(object arg) {
            if ((this.RetryJobCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetryJobCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/RetryC" +
            "orrelation", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void RetryCorrelation(System.Guid correlationGUID) {
            this.Invoke("RetryCorrelation", new object[] {
                        correlationGUID});
        }
        
        /// <remarks/>
        public void RetryCorrelationAsync(System.Guid correlationGUID) {
            this.RetryCorrelationAsync(correlationGUID, null);
        }
        
        /// <remarks/>
        public void RetryCorrelationAsync(System.Guid correlationGUID, object userState) {
            if ((this.RetryCorrelationOperationCompleted == null)) {
                this.RetryCorrelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRetryCorrelationOperationCompleted);
            }
            this.InvokeAsync("RetryCorrelation", new object[] {
                        correlationGUID}, this.RetryCorrelationOperationCompleted, userState);
        }
        
        private void OnRetryCorrelationOperationCompleted(object arg) {
            if ((this.RetryCorrelationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RetryCorrelationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/QueueP" +
            "urgeArchivedJobs", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueuePurgeArchivedJobs(System.Guid jobUid, QueueID queueId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<System.Guid> correlationUID, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<QueueMsgType> messageType, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] System.Nullable<int> hoursHistory) {
            this.Invoke("QueuePurgeArchivedJobs", new object[] {
                        jobUid,
                        queueId,
                        correlationUID,
                        messageType,
                        hoursHistory});
        }
        
        /// <remarks/>
        public void QueuePurgeArchivedJobsAsync(System.Guid jobUid, QueueID queueId, System.Nullable<System.Guid> correlationUID, System.Nullable<QueueMsgType> messageType, System.Nullable<int> hoursHistory) {
            this.QueuePurgeArchivedJobsAsync(jobUid, queueId, correlationUID, messageType, hoursHistory, null);
        }
        
        /// <remarks/>
        public void QueuePurgeArchivedJobsAsync(System.Guid jobUid, QueueID queueId, System.Nullable<System.Guid> correlationUID, System.Nullable<QueueMsgType> messageType, System.Nullable<int> hoursHistory, object userState) {
            if ((this.QueuePurgeArchivedJobsOperationCompleted == null)) {
                this.QueuePurgeArchivedJobsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueuePurgeArchivedJobsOperationCompleted);
            }
            this.InvokeAsync("QueuePurgeArchivedJobs", new object[] {
                        jobUid,
                        queueId,
                        correlationUID,
                        messageType,
                        hoursHistory}, this.QueuePurgeArchivedJobsOperationCompleted, userState);
        }
        
        private void OnQueuePurgeArchivedJobsOperationCompleted(object arg) {
            if ((this.QueuePurgeArchivedJobsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueuePurgeArchivedJobsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/GetPro" +
            "posedJobWaitTime", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetProposedJobWaitTime(System.Guid correlationUID, QueueMsgType messageType) {
            object[] results = this.Invoke("GetProposedJobWaitTime", new object[] {
                        correlationUID,
                        messageType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetProposedJobWaitTimeAsync(System.Guid correlationUID, QueueMsgType messageType) {
            this.GetProposedJobWaitTimeAsync(correlationUID, messageType, null);
        }
        
        /// <remarks/>
        public void GetProposedJobWaitTimeAsync(System.Guid correlationUID, QueueMsgType messageType, object userState) {
            if ((this.GetProposedJobWaitTimeOperationCompleted == null)) {
                this.GetProposedJobWaitTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProposedJobWaitTimeOperationCompleted);
            }
            this.InvokeAsync("GetProposedJobWaitTime", new object[] {
                        correlationUID,
                        messageType}, this.GetProposedJobWaitTimeOperationCompleted, userState);
        }
        
        private void OnGetProposedJobWaitTimeOperationCompleted(object arg) {
            if ((this.GetProposedJobWaitTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProposedJobWaitTimeCompleted(this, new GetProposedJobWaitTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/GetJob" +
            "GroupWaitTime", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetJobGroupWaitTime(System.Guid trackingID, QueueMsgType messageType) {
            object[] results = this.Invoke("GetJobGroupWaitTime", new object[] {
                        trackingID,
                        messageType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobGroupWaitTimeAsync(System.Guid trackingID, QueueMsgType messageType) {
            this.GetJobGroupWaitTimeAsync(trackingID, messageType, null);
        }
        
        /// <remarks/>
        public void GetJobGroupWaitTimeAsync(System.Guid trackingID, QueueMsgType messageType, object userState) {
            if ((this.GetJobGroupWaitTimeOperationCompleted == null)) {
                this.GetJobGroupWaitTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobGroupWaitTimeOperationCompleted);
            }
            this.InvokeAsync("GetJobGroupWaitTime", new object[] {
                        trackingID,
                        messageType}, this.GetJobGroupWaitTimeOperationCompleted, userState);
        }
        
        private void OnGetJobGroupWaitTimeOperationCompleted(object arg) {
            if ((this.GetJobGroupWaitTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobGroupWaitTimeCompleted(this, new GetJobGroupWaitTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/GetJob" +
            "GroupWaitTimeSimple", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetJobGroupWaitTimeSimple(System.Guid trackingID) {
            object[] results = this.Invoke("GetJobGroupWaitTimeSimple", new object[] {
                        trackingID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobGroupWaitTimeSimpleAsync(System.Guid trackingID) {
            this.GetJobGroupWaitTimeSimpleAsync(trackingID, null);
        }
        
        /// <remarks/>
        public void GetJobGroupWaitTimeSimpleAsync(System.Guid trackingID, object userState) {
            if ((this.GetJobGroupWaitTimeSimpleOperationCompleted == null)) {
                this.GetJobGroupWaitTimeSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobGroupWaitTimeSimpleOperationCompleted);
            }
            this.InvokeAsync("GetJobGroupWaitTimeSimple", new object[] {
                        trackingID}, this.GetJobGroupWaitTimeSimpleOperationCompleted, userState);
        }
        
        private void OnGetJobGroupWaitTimeSimpleOperationCompleted(object arg) {
            if ((this.GetJobGroupWaitTimeSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobGroupWaitTimeSimpleCompleted(this, new GetJobGroupWaitTimeSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/GetJob" +
            "WaitTime", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetJobWaitTime(System.Guid jobID) {
            object[] results = this.Invoke("GetJobWaitTime", new object[] {
                        jobID});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobWaitTimeAsync(System.Guid jobID) {
            this.GetJobWaitTimeAsync(jobID, null);
        }
        
        /// <remarks/>
        public void GetJobWaitTimeAsync(System.Guid jobID, object userState) {
            if ((this.GetJobWaitTimeOperationCompleted == null)) {
                this.GetJobWaitTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobWaitTimeOperationCompleted);
            }
            this.InvokeAsync("GetJobWaitTime", new object[] {
                        jobID}, this.GetJobWaitTimeOperationCompleted, userState);
        }
        
        private void OnGetJobWaitTimeOperationCompleted(object arg) {
            if ((this.GetJobWaitTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobWaitTimeCompleted(this, new GetJobWaitTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/ReadAl" +
            "lJobStatusSimple", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueueStatusDataSet ReadAllJobStatusSimple(System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            object[] results = this.Invoke("ReadAllJobStatusSimple", new object[] {
                        fromDate,
                        toDate,
                        maxRows,
                        includeWaitTime,
                        sortColumn,
                        sortOrder});
            return ((QueueStatusDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAllJobStatusSimpleAsync(System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            this.ReadAllJobStatusSimpleAsync(fromDate, toDate, maxRows, includeWaitTime, sortColumn, sortOrder, null);
        }
        
        /// <remarks/>
        public void ReadAllJobStatusSimpleAsync(System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder, object userState) {
            if ((this.ReadAllJobStatusSimpleOperationCompleted == null)) {
                this.ReadAllJobStatusSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAllJobStatusSimpleOperationCompleted);
            }
            this.InvokeAsync("ReadAllJobStatusSimple", new object[] {
                        fromDate,
                        toDate,
                        maxRows,
                        includeWaitTime,
                        sortColumn,
                        sortOrder}, this.ReadAllJobStatusSimpleOperationCompleted, userState);
        }
        
        private void OnReadAllJobStatusSimpleOperationCompleted(object arg) {
            if ((this.ReadAllJobStatusSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadAllJobStatusSimpleCompleted(this, new ReadAllJobStatusSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/ReadAl" +
            "lJobStatus", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueueStatusDataSet ReadAllJobStatus(JobState[] jobStates, QueueMsgType[] messageTypes, System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            object[] results = this.Invoke("ReadAllJobStatus", new object[] {
                        jobStates,
                        messageTypes,
                        fromDate,
                        toDate,
                        maxRows,
                        includeWaitTime,
                        sortColumn,
                        sortOrder});
            return ((QueueStatusDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadAllJobStatusAsync(JobState[] jobStates, QueueMsgType[] messageTypes, System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            this.ReadAllJobStatusAsync(jobStates, messageTypes, fromDate, toDate, maxRows, includeWaitTime, sortColumn, sortOrder, null);
        }
        
        /// <remarks/>
        public void ReadAllJobStatusAsync(JobState[] jobStates, QueueMsgType[] messageTypes, System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder, object userState) {
            if ((this.ReadAllJobStatusOperationCompleted == null)) {
                this.ReadAllJobStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadAllJobStatusOperationCompleted);
            }
            this.InvokeAsync("ReadAllJobStatus", new object[] {
                        jobStates,
                        messageTypes,
                        fromDate,
                        toDate,
                        maxRows,
                        includeWaitTime,
                        sortColumn,
                        sortOrder}, this.ReadAllJobStatusOperationCompleted, userState);
        }
        
        private void OnReadAllJobStatusOperationCompleted(object arg) {
            if ((this.ReadAllJobStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadAllJobStatusCompleted(this, new ReadAllJobStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/ReadPr" +
            "ojectJobStatus", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueueStatusDataSet ReadProjectJobStatus(System.Guid[] projectGUIDs, QueueMsgType[] messageTypes, JobState[] JobCompletionStates, System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            object[] results = this.Invoke("ReadProjectJobStatus", new object[] {
                        projectGUIDs,
                        messageTypes,
                        JobCompletionStates,
                        fromDate,
                        toDate,
                        maxRows,
                        includeWaitTime,
                        sortColumn,
                        sortOrder});
            return ((QueueStatusDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadProjectJobStatusAsync(System.Guid[] projectGUIDs, QueueMsgType[] messageTypes, JobState[] JobCompletionStates, System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            this.ReadProjectJobStatusAsync(projectGUIDs, messageTypes, JobCompletionStates, fromDate, toDate, maxRows, includeWaitTime, sortColumn, sortOrder, null);
        }
        
        /// <remarks/>
        public void ReadProjectJobStatusAsync(System.Guid[] projectGUIDs, QueueMsgType[] messageTypes, JobState[] JobCompletionStates, System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder, object userState) {
            if ((this.ReadProjectJobStatusOperationCompleted == null)) {
                this.ReadProjectJobStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadProjectJobStatusOperationCompleted);
            }
            this.InvokeAsync("ReadProjectJobStatus", new object[] {
                        projectGUIDs,
                        messageTypes,
                        JobCompletionStates,
                        fromDate,
                        toDate,
                        maxRows,
                        includeWaitTime,
                        sortColumn,
                        sortOrder}, this.ReadProjectJobStatusOperationCompleted, userState);
        }
        
        private void OnReadProjectJobStatusOperationCompleted(object arg) {
            if ((this.ReadProjectJobStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadProjectJobStatusCompleted(this, new ReadProjectJobStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/ReadMy" +
            "JobStatus", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueueStatusDataSet ReadMyJobStatus(QueueMsgType[] messageTypes, JobState[] JobCompletionState, System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            object[] results = this.Invoke("ReadMyJobStatus", new object[] {
                        messageTypes,
                        JobCompletionState,
                        fromDate,
                        toDate,
                        maxRows,
                        includeWaitTime,
                        sortColumn,
                        sortOrder});
            return ((QueueStatusDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadMyJobStatusAsync(QueueMsgType[] messageTypes, JobState[] JobCompletionState, System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            this.ReadMyJobStatusAsync(messageTypes, JobCompletionState, fromDate, toDate, maxRows, includeWaitTime, sortColumn, sortOrder, null);
        }
        
        /// <remarks/>
        public void ReadMyJobStatusAsync(QueueMsgType[] messageTypes, JobState[] JobCompletionState, System.DateTime fromDate, System.DateTime toDate, int maxRows, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder, object userState) {
            if ((this.ReadMyJobStatusOperationCompleted == null)) {
                this.ReadMyJobStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadMyJobStatusOperationCompleted);
            }
            this.InvokeAsync("ReadMyJobStatus", new object[] {
                        messageTypes,
                        JobCompletionState,
                        fromDate,
                        toDate,
                        maxRows,
                        includeWaitTime,
                        sortColumn,
                        sortOrder}, this.ReadMyJobStatusOperationCompleted, userState);
        }
        
        private void OnReadMyJobStatusOperationCompleted(object arg) {
            if ((this.ReadMyJobStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadMyJobStatusCompleted(this, new ReadMyJobStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/GetMyJ" +
            "obCount", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetMyJobCount(QueueMsgType[] messageTypes, JobState[] JobCompletionState, System.DateTime fromDate, System.DateTime toDate, int maxRows) {
            object[] results = this.Invoke("GetMyJobCount", new object[] {
                        messageTypes,
                        JobCompletionState,
                        fromDate,
                        toDate,
                        maxRows});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetMyJobCountAsync(QueueMsgType[] messageTypes, JobState[] JobCompletionState, System.DateTime fromDate, System.DateTime toDate, int maxRows) {
            this.GetMyJobCountAsync(messageTypes, JobCompletionState, fromDate, toDate, maxRows, null);
        }
        
        /// <remarks/>
        public void GetMyJobCountAsync(QueueMsgType[] messageTypes, JobState[] JobCompletionState, System.DateTime fromDate, System.DateTime toDate, int maxRows, object userState) {
            if ((this.GetMyJobCountOperationCompleted == null)) {
                this.GetMyJobCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMyJobCountOperationCompleted);
            }
            this.InvokeAsync("GetMyJobCount", new object[] {
                        messageTypes,
                        JobCompletionState,
                        fromDate,
                        toDate,
                        maxRows}, this.GetMyJobCountOperationCompleted, userState);
        }
        
        private void OnGetMyJobCountOperationCompleted(object arg) {
            if ((this.GetMyJobCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMyJobCountCompleted(this, new GetMyJobCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/ReadJo" +
            "bStatus", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueueStatusDataSet ReadJobStatus(QueueStatusRequestDataSet qsrDS, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            object[] results = this.Invoke("ReadJobStatus", new object[] {
                        qsrDS,
                        includeWaitTime,
                        sortColumn,
                        sortOrder});
            return ((QueueStatusDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadJobStatusAsync(QueueStatusRequestDataSet qsrDS, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder) {
            this.ReadJobStatusAsync(qsrDS, includeWaitTime, sortColumn, sortOrder, null);
        }
        
        /// <remarks/>
        public void ReadJobStatusAsync(QueueStatusRequestDataSet qsrDS, bool includeWaitTime, SortColumn sortColumn, SortOrder sortOrder, object userState) {
            if ((this.ReadJobStatusOperationCompleted == null)) {
                this.ReadJobStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadJobStatusOperationCompleted);
            }
            this.InvokeAsync("ReadJobStatus", new object[] {
                        qsrDS,
                        includeWaitTime,
                        sortColumn,
                        sortOrder}, this.ReadJobStatusOperationCompleted, userState);
        }
        
        private void OnReadJobStatusOperationCompleted(object arg) {
            if ((this.ReadJobStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadJobStatusCompleted(this, new ReadJobStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/ReadJo" +
            "bStatusSimple", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public QueueStatusDataSet ReadJobStatusSimple(System.Guid[] jobUIDs, bool includeWaitTime) {
            object[] results = this.Invoke("ReadJobStatusSimple", new object[] {
                        jobUIDs,
                        includeWaitTime});
            return ((QueueStatusDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadJobStatusSimpleAsync(System.Guid[] jobUIDs, bool includeWaitTime) {
            this.ReadJobStatusSimpleAsync(jobUIDs, includeWaitTime, null);
        }
        
        /// <remarks/>
        public void ReadJobStatusSimpleAsync(System.Guid[] jobUIDs, bool includeWaitTime, object userState) {
            if ((this.ReadJobStatusSimpleOperationCompleted == null)) {
                this.ReadJobStatusSimpleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadJobStatusSimpleOperationCompleted);
            }
            this.InvokeAsync("ReadJobStatusSimple", new object[] {
                        jobUIDs,
                        includeWaitTime}, this.ReadJobStatusSimpleOperationCompleted, userState);
        }
        
        private void OnReadJobStatusSimpleOperationCompleted(object arg) {
            if ((this.ReadJobStatusSimpleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadJobStatusSimpleCompleted(this, new ReadJobStatusSimpleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/GetJob" +
            "Count", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetJobCount(System.Guid[] CorrelationGUIDs, JobState[] jobStates, QueueMsgType[] messageTypes) {
            object[] results = this.Invoke("GetJobCount", new object[] {
                        CorrelationGUIDs,
                        jobStates,
                        messageTypes});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetJobCountAsync(System.Guid[] CorrelationGUIDs, JobState[] jobStates, QueueMsgType[] messageTypes) {
            this.GetJobCountAsync(CorrelationGUIDs, jobStates, messageTypes, null);
        }
        
        /// <remarks/>
        public void GetJobCountAsync(System.Guid[] CorrelationGUIDs, JobState[] jobStates, QueueMsgType[] messageTypes, object userState) {
            if ((this.GetJobCountOperationCompleted == null)) {
                this.GetJobCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetJobCountOperationCompleted);
            }
            this.InvokeAsync("GetJobCount", new object[] {
                        CorrelationGUIDs,
                        jobStates,
                        messageTypes}, this.GetJobCountOperationCompleted, userState);
        }
        
        private void OnGetJobCountOperationCompleted(object arg) {
            if ((this.GetJobCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetJobCountCompleted(this, new GetJobCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/ReadQu" +
            "eueConfiguration", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string ReadQueueConfiguration(QueueID queueId) {
            object[] results = this.Invoke("ReadQueueConfiguration", new object[] {
                        queueId});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void ReadQueueConfigurationAsync(QueueID queueId) {
            this.ReadQueueConfigurationAsync(queueId, null);
        }
        
        /// <remarks/>
        public void ReadQueueConfigurationAsync(QueueID queueId, object userState) {
            if ((this.ReadQueueConfigurationOperationCompleted == null)) {
                this.ReadQueueConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadQueueConfigurationOperationCompleted);
            }
            this.InvokeAsync("ReadQueueConfiguration", new object[] {
                        queueId}, this.ReadQueueConfigurationOperationCompleted, userState);
        }
        
        private void OnReadQueueConfigurationOperationCompleted(object arg) {
            if ((this.ReadQueueConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadQueueConfigurationCompleted(this, new ReadQueueConfigurationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/SetQue" +
            "ueConfiguration", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetQueueConfiguration(QueueID queueId, string name, string value) {
            this.Invoke("SetQueueConfiguration", new object[] {
                        queueId,
                        name,
                        value});
        }
        
        /// <remarks/>
        public void SetQueueConfigurationAsync(QueueID queueId, string name, string value) {
            this.SetQueueConfigurationAsync(queueId, name, value, null);
        }
        
        /// <remarks/>
        public void SetQueueConfigurationAsync(QueueID queueId, string name, string value, object userState) {
            if ((this.SetQueueConfigurationOperationCompleted == null)) {
                this.SetQueueConfigurationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetQueueConfigurationOperationCompleted);
            }
            this.InvokeAsync("SetQueueConfiguration", new object[] {
                        queueId,
                        name,
                        value}, this.SetQueueConfigurationOperationCompleted, userState);
        }
        
        private void OnSetQueueConfigurationOperationCompleted(object arg) {
            if ((this.SetQueueConfigurationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetQueueConfigurationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/PurgeQ" +
            "ueueStatistics", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void PurgeQueueStatistics(QueueMsgType[] messageTypes) {
            this.Invoke("PurgeQueueStatistics", new object[] {
                        messageTypes});
        }
        
        /// <remarks/>
        public void PurgeQueueStatisticsAsync(QueueMsgType[] messageTypes) {
            this.PurgeQueueStatisticsAsync(messageTypes, null);
        }
        
        /// <remarks/>
        public void PurgeQueueStatisticsAsync(QueueMsgType[] messageTypes, object userState) {
            if ((this.PurgeQueueStatisticsOperationCompleted == null)) {
                this.PurgeQueueStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPurgeQueueStatisticsOperationCompleted);
            }
            this.InvokeAsync("PurgeQueueStatistics", new object[] {
                        messageTypes}, this.PurgeQueueStatisticsOperationCompleted, userState);
        }
        
        private void OnPurgeQueueStatisticsOperationCompleted(object arg) {
            if ((this.PurgeQueueStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PurgeQueueStatisticsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/")]
    public enum JobState {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        ReadyForProcessing,
        
        /// <remarks/>
        SendIncomplete,
        
        /// <remarks/>
        Processing,
        
        /// <remarks/>
        Success,
        
        /// <remarks/>
        Failed,
        
        /// <remarks/>
        FailedNotBlocking,
        
        /// <remarks/>
        ProcessingDeferred,
        
        /// <remarks/>
        CorrelationBlocked,
        
        /// <remarks/>
        Canceled,
        
        /// <remarks/>
        OnHold,
        
        /// <remarks/>
        Sleeping,
        
        /// <remarks/>
        ReadyForLaunch,
        
        /// <remarks/>
        LastState,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/")]
    public enum QueueID {
        
        /// <remarks/>
        UnknownQ,
        
        /// <remarks/>
        ProjectQ,
        
        /// <remarks/>
        TimesheetQ,
        
        /// <remarks/>
        EndQList,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/")]
    public enum QueueMsgType {
        
        /// <remarks/>
        Unknown,
        
        /// <remarks/>
        ACProjectSave,
        
        /// <remarks/>
        AdSyncERP,
        
        /// <remarks/>
        AdSyncGroup,
        
        /// <remarks/>
        ArchiveCategories,
        
        /// <remarks/>
        ArchiveCustomFields,
        
        /// <remarks/>
        ArchiveGlobalProject,
        
        /// <remarks/>
        ArchiveResources,
        
        /// <remarks/>
        ArchiveSystemSettings,
        
        /// <remarks/>
        ArchiveViews,
        
        /// <remarks/>
        BumpPriority,
        
        /// <remarks/>
        CBSProjRendezvous,
        
        /// <remarks/>
        CBSRequest,
        
        /// <remarks/>
        CBSTsRendezvous,
        
        /// <remarks/>
        CreateProposalProject,
        
        /// <remarks/>
        CreateWssSite,
        
        /// <remarks/>
        DeleteWssSite,
        
        /// <remarks/>
        LWPUpgradeToProject,
        
        /// <remarks/>
        NotificationMessage,
        
        /// <remarks/>
        ProjectArchive,
        
        /// <remarks/>
        ProjectArchiveRetentionDelete,
        
        /// <remarks/>
        ProjectCheckIn,
        
        /// <remarks/>
        ProjectCreate,
        
        /// <remarks/>
        ProjectDelete,
        
        /// <remarks/>
        ProjectPublish,
        
        /// <remarks/>
        ProjectRename,
        
        /// <remarks/>
        ProjectRestore,
        
        /// <remarks/>
        ProjectReversePublish,
        
        /// <remarks/>
        ProjectUpdate,
        
        /// <remarks/>
        ProjectUpdateTeam,
        
        /// <remarks/>
        PublishNotifications,
        
        /// <remarks/>
        QueueCleanup,
        
        /// <remarks/>
        ReportingAttributeCubeSettingsSync,
        
        /// <remarks/>
        ReportingBaseCalendarSync,
        
        /// <remarks/>
        ReportingCustomFieldMetadataSync,
        
        /// <remarks/>
        ReportingEntityUserViewRefresh,
        
        /// <remarks/>
        ReportingFiscalPeriodsSync,
        
        /// <remarks/>
        ReportingLookupTableSync,
        
        /// <remarks/>
        ReportingProjectDelete,
        
        /// <remarks/>
        ReportingProjectPublish,
        
        /// <remarks/>
        ReportingResourcesCapacityRangeSync,
        
        /// <remarks/>
        ReportingResourceSync,
        
        /// <remarks/>
        ReportingTimesheetAdjust,
        
        /// <remarks/>
        ReportingTimesheetClassSync,
        
        /// <remarks/>
        ReportingTimesheetDelete,
        
        /// <remarks/>
        ReportingTimesheetPeriodDelete,
        
        /// <remarks/>
        ReportingTimesheetPeriodSync,
        
        /// <remarks/>
        ReportingTimesheetSave,
        
        /// <remarks/>
        ReportingTimesheetStatusSync,
        
        /// <remarks/>
        ReportingWSSSync,
        
        /// <remarks/>
        ResourcePlanCheckIn,
        
        /// <remarks/>
        ResourcePlanDelete,
        
        /// <remarks/>
        ResourcePlanPublish,
        
        /// <remarks/>
        ResourcePlanSave,
        
        /// <remarks/>
        RestoreCategories,
        
        /// <remarks/>
        RestoreCustomFields,
        
        /// <remarks/>
        RestoreGlobalProject,
        
        /// <remarks/>
        RestoreResources,
        
        /// <remarks/>
        RestoreSystemSettings,
        
        /// <remarks/>
        RestoreViews,
        
        /// <remarks/>
        RulesProcessAll,
        
        /// <remarks/>
        RulesProcessAllAutoForManager,
        
        /// <remarks/>
        RulesProcessAllForManager,
        
        /// <remarks/>
        RulesProcessSingleForManager,
        
        /// <remarks/>
        StatusApproval,
        
        /// <remarks/>
        Timer1,
        
        /// <remarks/>
        Timer10,
        
        /// <remarks/>
        Timer2,
        
        /// <remarks/>
        Timer3,
        
        /// <remarks/>
        Timer4,
        
        /// <remarks/>
        Timer5,
        
        /// <remarks/>
        Timer6,
        
        /// <remarks/>
        Timer7,
        
        /// <remarks/>
        Timer8,
        
        /// <remarks/>
        Timer9,
        
        /// <remarks/>
        TimerMessage,
        
        /// <remarks/>
        TimerRzNotify,
        
        /// <remarks/>
        TimerRzProj,
        
        /// <remarks/>
        TimerRzTS,
        
        /// <remarks/>
        TimesheetMessage,
        
        /// <remarks/>
        TimesheetDelete,
        
        /// <remarks/>
        TimesheetRecall,
        
        /// <remarks/>
        TimesheetReview,
        
        /// <remarks/>
        TimesheetSubmit,
        
        /// <remarks/>
        TimesheetUpdate,
        
        /// <remarks/>
        ReportingSyncGlobalData,
        
        /// <remarks/>
        SynchronizeMembershipForWssSite,
        
        /// <remarks/>
        SynchronizeSingleUserMembershipInWss,
        
        /// <remarks/>
        ReportingRefresh,
        
        /// <remarks/>
        LastMessage,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/")]
    public enum SortColumn {
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        CorrelationGUID,
        
        /// <remarks/>
        CorrelationPriority,
        
        /// <remarks/>
        GroupPriority,
        
        /// <remarks/>
        JobCompletionState,
        
        /// <remarks/>
        JobGUID,
        
        /// <remarks/>
        JobGroupGUID,
        
        /// <remarks/>
        JobInfoGUID,
        
        /// <remarks/>
        LastAdminAction,
        
        /// <remarks/>
        MachineName,
        
        /// <remarks/>
        MessageType,
        
        /// <remarks/>
        PercentComplete,
        
        /// <remarks/>
        QueueCompletedTime,
        
        /// <remarks/>
        QueueEntryTime,
        
        /// <remarks/>
        QueueId,
        
        /// <remarks/>
        QueuePosition,
        
        /// <remarks/>
        QueueProcessingTime,
        
        /// <remarks/>
        QueueWakeupTime,
        
        /// <remarks/>
        ResourceGUID,
        
        /// <remarks/>
        ServiceName,
        
        /// <remarks/>
        LastColumn,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/office/project/server/webservices/QueueSystem/")]
    public enum SortOrder {
        
        /// <remarks/>
        Undefined,
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
        
        /// <remarks/>
        LastOrder,
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("QueueStatusDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    public partial class QueueStatusDataSet : global::System.Data.DataSet {
        
        private StatusDataTable tableStatus;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public QueueStatusDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected QueueStatusDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Status"] != null)) {
                    base.Tables.Add(new StatusDataTable(ds.Tables["Status"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StatusDataTable Status {
            get {
                return this.tableStatus;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            QueueStatusDataSet cln = ((QueueStatusDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Status"] != null)) {
                    base.Tables.Add(new StatusDataTable(ds.Tables["Status"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableStatus = ((StatusDataTable)(base.Tables["Status"]));
            if ((initTable == true)) {
                if ((this.tableStatus != null)) {
                    this.tableStatus.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "QueueStatusDataSet";
            this.Prefix = "";
            this.Namespace = "http://schemas.microsoft.com/office/project/server/webservices/QueueStatusDataSet" +
                "/";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStatus = new StatusDataTable();
            base.Tables.Add(this.tableStatus);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStatus() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            QueueStatusDataSet ds = new QueueStatusDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StatusRowChangeEventHandler(object sender, StatusRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StatusDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnQueueID;
            
            private global::System.Data.DataColumn columnMessageType;
            
            private global::System.Data.DataColumn columnJobCompletionState;
            
            private global::System.Data.DataColumn columnQueuePosition;
            
            private global::System.Data.DataColumn columnLastAdminAction;
            
            private global::System.Data.DataColumn columnErrorInfo;
            
            private global::System.Data.DataColumn columnPercentComplete;
            
            private global::System.Data.DataColumn columnQueueEntryTime;
            
            private global::System.Data.DataColumn columnQueueProcessingTime;
            
            private global::System.Data.DataColumn columnQueueCompletedTime;
            
            private global::System.Data.DataColumn columnQueueWakeupTime;
            
            private global::System.Data.DataColumn columnWaitTime;
            
            private global::System.Data.DataColumn columnGroupPriority;
            
            private global::System.Data.DataColumn columnCorrelationPriority;
            
            private global::System.Data.DataColumn columnCorrelationGUID;
            
            private global::System.Data.DataColumn columnJobGUID;
            
            private global::System.Data.DataColumn columnJobGroupGUID;
            
            private global::System.Data.DataColumn columnJobInfoGUID;
            
            private global::System.Data.DataColumn columnResourceGUID;
            
            private global::System.Data.DataColumn columnMachineName;
            
            private global::System.Data.DataColumn columnServiceName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusDataTable() {
                this.TableName = "Status";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StatusDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StatusDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QueueIDColumn {
                get {
                    return this.columnQueueID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MessageTypeColumn {
                get {
                    return this.columnMessageType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JobCompletionStateColumn {
                get {
                    return this.columnJobCompletionState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QueuePositionColumn {
                get {
                    return this.columnQueuePosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn LastAdminActionColumn {
                get {
                    return this.columnLastAdminAction;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ErrorInfoColumn {
                get {
                    return this.columnErrorInfo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PercentCompleteColumn {
                get {
                    return this.columnPercentComplete;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QueueEntryTimeColumn {
                get {
                    return this.columnQueueEntryTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QueueProcessingTimeColumn {
                get {
                    return this.columnQueueProcessingTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QueueCompletedTimeColumn {
                get {
                    return this.columnQueueCompletedTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn QueueWakeupTimeColumn {
                get {
                    return this.columnQueueWakeupTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WaitTimeColumn {
                get {
                    return this.columnWaitTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn GroupPriorityColumn {
                get {
                    return this.columnGroupPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CorrelationPriorityColumn {
                get {
                    return this.columnCorrelationPriority;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn CorrelationGUIDColumn {
                get {
                    return this.columnCorrelationGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JobGUIDColumn {
                get {
                    return this.columnJobGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JobGroupGUIDColumn {
                get {
                    return this.columnJobGroupGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JobInfoGUIDColumn {
                get {
                    return this.columnJobInfoGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ResourceGUIDColumn {
                get {
                    return this.columnResourceGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MachineNameColumn {
                get {
                    return this.columnMachineName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn ServiceNameColumn {
                get {
                    return this.columnServiceName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRow this[int index] {
                get {
                    return ((StatusRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StatusRowChangeEventHandler StatusRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StatusRowChangeEventHandler StatusRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StatusRowChangeEventHandler StatusRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StatusRowChangeEventHandler StatusRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStatusRow(StatusRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRow AddStatusRow(
                        int QueueID, 
                        int MessageType, 
                        int JobCompletionState, 
                        int QueuePosition, 
                        int LastAdminAction, 
                        string ErrorInfo, 
                        int PercentComplete, 
                        System.DateTime QueueEntryTime, 
                        System.DateTime QueueProcessingTime, 
                        System.DateTime QueueCompletedTime, 
                        System.DateTime QueueWakeupTime, 
                        int WaitTime, 
                        int GroupPriority, 
                        int CorrelationPriority, 
                        System.Guid CorrelationGUID, 
                        System.Guid JobGUID, 
                        System.Guid JobGroupGUID, 
                        System.Guid JobInfoGUID, 
                        System.Guid ResourceGUID, 
                        string MachineName, 
                        string ServiceName) {
                StatusRow rowStatusRow = ((StatusRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        QueueID,
                        MessageType,
                        JobCompletionState,
                        QueuePosition,
                        LastAdminAction,
                        ErrorInfo,
                        PercentComplete,
                        QueueEntryTime,
                        QueueProcessingTime,
                        QueueCompletedTime,
                        QueueWakeupTime,
                        WaitTime,
                        GroupPriority,
                        CorrelationPriority,
                        CorrelationGUID,
                        JobGUID,
                        JobGroupGUID,
                        JobInfoGUID,
                        ResourceGUID,
                        MachineName,
                        ServiceName};
                rowStatusRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStatusRow);
                return rowStatusRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StatusDataTable cln = ((StatusDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StatusDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnQueueID = base.Columns["QueueID"];
                this.columnMessageType = base.Columns["MessageType"];
                this.columnJobCompletionState = base.Columns["JobCompletionState"];
                this.columnQueuePosition = base.Columns["QueuePosition"];
                this.columnLastAdminAction = base.Columns["LastAdminAction"];
                this.columnErrorInfo = base.Columns["ErrorInfo"];
                this.columnPercentComplete = base.Columns["PercentComplete"];
                this.columnQueueEntryTime = base.Columns["QueueEntryTime"];
                this.columnQueueProcessingTime = base.Columns["QueueProcessingTime"];
                this.columnQueueCompletedTime = base.Columns["QueueCompletedTime"];
                this.columnQueueWakeupTime = base.Columns["QueueWakeupTime"];
                this.columnWaitTime = base.Columns["WaitTime"];
                this.columnGroupPriority = base.Columns["GroupPriority"];
                this.columnCorrelationPriority = base.Columns["CorrelationPriority"];
                this.columnCorrelationGUID = base.Columns["CorrelationGUID"];
                this.columnJobGUID = base.Columns["JobGUID"];
                this.columnJobGroupGUID = base.Columns["JobGroupGUID"];
                this.columnJobInfoGUID = base.Columns["JobInfoGUID"];
                this.columnResourceGUID = base.Columns["ResourceGUID"];
                this.columnMachineName = base.Columns["MachineName"];
                this.columnServiceName = base.Columns["ServiceName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnQueueID = new global::System.Data.DataColumn("QueueID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueueID);
                this.columnMessageType = new global::System.Data.DataColumn("MessageType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageType);
                this.columnJobCompletionState = new global::System.Data.DataColumn("JobCompletionState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCompletionState);
                this.columnQueuePosition = new global::System.Data.DataColumn("QueuePosition", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueuePosition);
                this.columnLastAdminAction = new global::System.Data.DataColumn("LastAdminAction", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastAdminAction);
                this.columnErrorInfo = new global::System.Data.DataColumn("ErrorInfo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnErrorInfo);
                this.columnPercentComplete = new global::System.Data.DataColumn("PercentComplete", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPercentComplete);
                this.columnQueueEntryTime = new global::System.Data.DataColumn("QueueEntryTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueueEntryTime);
                this.columnQueueProcessingTime = new global::System.Data.DataColumn("QueueProcessingTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueueProcessingTime);
                this.columnQueueCompletedTime = new global::System.Data.DataColumn("QueueCompletedTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueueCompletedTime);
                this.columnQueueWakeupTime = new global::System.Data.DataColumn("QueueWakeupTime", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnQueueWakeupTime);
                this.columnWaitTime = new global::System.Data.DataColumn("WaitTime", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWaitTime);
                this.columnGroupPriority = new global::System.Data.DataColumn("GroupPriority", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupPriority);
                this.columnCorrelationPriority = new global::System.Data.DataColumn("CorrelationPriority", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorrelationPriority);
                this.columnCorrelationGUID = new global::System.Data.DataColumn("CorrelationGUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCorrelationGUID);
                this.columnJobGUID = new global::System.Data.DataColumn("JobGUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobGUID);
                this.columnJobGroupGUID = new global::System.Data.DataColumn("JobGroupGUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobGroupGUID);
                this.columnJobInfoGUID = new global::System.Data.DataColumn("JobInfoGUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobInfoGUID);
                this.columnResourceGUID = new global::System.Data.DataColumn("ResourceGUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnResourceGUID);
                this.columnMachineName = new global::System.Data.DataColumn("MachineName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMachineName);
                this.columnServiceName = new global::System.Data.DataColumn("ServiceName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnServiceName);
                this.columnQueueID.AllowDBNull = false;
                this.columnMessageType.AllowDBNull = false;
                this.columnJobCompletionState.AllowDBNull = false;
                this.columnQueuePosition.AllowDBNull = false;
                this.columnLastAdminAction.AllowDBNull = false;
                this.columnPercentComplete.AllowDBNull = false;
                this.columnQueueEntryTime.AllowDBNull = false;
                this.columnQueueProcessingTime.AllowDBNull = false;
                this.columnQueueCompletedTime.AllowDBNull = false;
                this.columnQueueWakeupTime.AllowDBNull = false;
                this.columnWaitTime.AllowDBNull = false;
                this.columnGroupPriority.AllowDBNull = false;
                this.columnCorrelationPriority.AllowDBNull = false;
                this.columnCorrelationGUID.AllowDBNull = false;
                this.columnJobGUID.AllowDBNull = false;
                this.columnJobGroupGUID.AllowDBNull = false;
                this.columnJobInfoGUID.AllowDBNull = false;
                this.columnResourceGUID.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRow NewStatusRow() {
                return ((StatusRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StatusRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StatusRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StatusRowChanged != null)) {
                    this.StatusRowChanged(this, new StatusRowChangeEvent(((StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StatusRowChanging != null)) {
                    this.StatusRowChanging(this, new StatusRowChangeEvent(((StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StatusRowDeleted != null)) {
                    this.StatusRowDeleted(this, new StatusRowChangeEvent(((StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StatusRowDeleting != null)) {
                    this.StatusRowDeleting(this, new StatusRowChangeEvent(((StatusRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStatusRow(StatusRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QueueStatusDataSet ds = new QueueStatusDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StatusDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StatusRow : global::System.Data.DataRow {
            
            private StatusDataTable tableStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StatusRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStatus = ((StatusDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QueueID {
                get {
                    return ((int)(this[this.tableStatus.QueueIDColumn]));
                }
                set {
                    this[this.tableStatus.QueueIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int MessageType {
                get {
                    return ((int)(this[this.tableStatus.MessageTypeColumn]));
                }
                set {
                    this[this.tableStatus.MessageTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int JobCompletionState {
                get {
                    return ((int)(this[this.tableStatus.JobCompletionStateColumn]));
                }
                set {
                    this[this.tableStatus.JobCompletionStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int QueuePosition {
                get {
                    return ((int)(this[this.tableStatus.QueuePositionColumn]));
                }
                set {
                    this[this.tableStatus.QueuePositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int LastAdminAction {
                get {
                    return ((int)(this[this.tableStatus.LastAdminActionColumn]));
                }
                set {
                    this[this.tableStatus.LastAdminActionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ErrorInfo {
                get {
                    try {
                        return ((string)(this[this.tableStatus.ErrorInfoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ErrorInfo\' in table \'Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatus.ErrorInfoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PercentComplete {
                get {
                    return ((int)(this[this.tableStatus.PercentCompleteColumn]));
                }
                set {
                    this[this.tableStatus.PercentCompleteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime QueueEntryTime {
                get {
                    return ((global::System.DateTime)(this[this.tableStatus.QueueEntryTimeColumn]));
                }
                set {
                    this[this.tableStatus.QueueEntryTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime QueueProcessingTime {
                get {
                    return ((global::System.DateTime)(this[this.tableStatus.QueueProcessingTimeColumn]));
                }
                set {
                    this[this.tableStatus.QueueProcessingTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime QueueCompletedTime {
                get {
                    return ((global::System.DateTime)(this[this.tableStatus.QueueCompletedTimeColumn]));
                }
                set {
                    this[this.tableStatus.QueueCompletedTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime QueueWakeupTime {
                get {
                    return ((global::System.DateTime)(this[this.tableStatus.QueueWakeupTimeColumn]));
                }
                set {
                    this[this.tableStatus.QueueWakeupTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int WaitTime {
                get {
                    return ((int)(this[this.tableStatus.WaitTimeColumn]));
                }
                set {
                    this[this.tableStatus.WaitTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int GroupPriority {
                get {
                    return ((int)(this[this.tableStatus.GroupPriorityColumn]));
                }
                set {
                    this[this.tableStatus.GroupPriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int CorrelationPriority {
                get {
                    return ((int)(this[this.tableStatus.CorrelationPriorityColumn]));
                }
                set {
                    this[this.tableStatus.CorrelationPriorityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid CorrelationGUID {
                get {
                    return ((global::System.Guid)(this[this.tableStatus.CorrelationGUIDColumn]));
                }
                set {
                    this[this.tableStatus.CorrelationGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid JobGUID {
                get {
                    return ((global::System.Guid)(this[this.tableStatus.JobGUIDColumn]));
                }
                set {
                    this[this.tableStatus.JobGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid JobGroupGUID {
                get {
                    return ((global::System.Guid)(this[this.tableStatus.JobGroupGUIDColumn]));
                }
                set {
                    this[this.tableStatus.JobGroupGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid JobInfoGUID {
                get {
                    return ((global::System.Guid)(this[this.tableStatus.JobInfoGUIDColumn]));
                }
                set {
                    this[this.tableStatus.JobInfoGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid ResourceGUID {
                get {
                    return ((global::System.Guid)(this[this.tableStatus.ResourceGUIDColumn]));
                }
                set {
                    this[this.tableStatus.ResourceGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string MachineName {
                get {
                    try {
                        return ((string)(this[this.tableStatus.MachineNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MachineName\' in table \'Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatus.MachineNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string ServiceName {
                get {
                    try {
                        return ((string)(this[this.tableStatus.ServiceNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ServiceName\' in table \'Status\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatus.ServiceNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsErrorInfoNull() {
                return this.IsNull(this.tableStatus.ErrorInfoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetErrorInfoNull() {
                this[this.tableStatus.ErrorInfoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsMachineNameNull() {
                return this.IsNull(this.tableStatus.MachineNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetMachineNameNull() {
                this[this.tableStatus.MachineNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsServiceNameNull() {
                return this.IsNull(this.tableStatus.ServiceNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetServiceNameNull() {
                this[this.tableStatus.ServiceNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StatusRowChangeEvent : global::System.EventArgs {
            
            private StatusRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRowChangeEvent(StatusRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("QueueStatusRequestDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    public partial class QueueStatusRequestDataSet : global::System.Data.DataSet {
        
        private StatusRequestDataTable tableStatusRequest;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public QueueStatusRequestDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected QueueStatusRequestDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["StatusRequest"] != null)) {
                    base.Tables.Add(new StatusRequestDataTable(ds.Tables["StatusRequest"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public StatusRequestDataTable StatusRequest {
            get {
                return this.tableStatusRequest;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            QueueStatusRequestDataSet cln = ((QueueStatusRequestDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["StatusRequest"] != null)) {
                    base.Tables.Add(new StatusRequestDataTable(ds.Tables["StatusRequest"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableStatusRequest = ((StatusRequestDataTable)(base.Tables["StatusRequest"]));
            if ((initTable == true)) {
                if ((this.tableStatusRequest != null)) {
                    this.tableStatusRequest.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "QueueStatusRequestDataSet";
            this.Prefix = "";
            this.Namespace = "http://schemas.microsoft.com/office/project/server/webservices/QueueStatusRequest" +
                "DataSet/";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableStatusRequest = new StatusRequestDataTable();
            base.Tables.Add(this.tableStatusRequest);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeStatusRequest() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            QueueStatusRequestDataSet ds = new QueueStatusRequestDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void StatusRequestRowChangeEventHandler(object sender, StatusRequestRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class StatusRequestDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnJobGroupGUID;
            
            private global::System.Data.DataColumn columnJobGUID;
            
            private global::System.Data.DataColumn columnMessageType;
            
            private global::System.Data.DataColumn columnJobCompletionState;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRequestDataTable() {
                this.TableName = "StatusRequest";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StatusRequestDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected StatusRequestDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JobGroupGUIDColumn {
                get {
                    return this.columnJobGroupGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JobGUIDColumn {
                get {
                    return this.columnJobGUID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn MessageTypeColumn {
                get {
                    return this.columnMessageType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn JobCompletionStateColumn {
                get {
                    return this.columnJobCompletionState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRequestRow this[int index] {
                get {
                    return ((StatusRequestRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StatusRequestRowChangeEventHandler StatusRequestRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StatusRequestRowChangeEventHandler StatusRequestRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StatusRequestRowChangeEventHandler StatusRequestRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event StatusRequestRowChangeEventHandler StatusRequestRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddStatusRequestRow(StatusRequestRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRequestRow AddStatusRequestRow(System.Guid JobGroupGUID, System.Guid JobGUID, int MessageType, int JobCompletionState) {
                StatusRequestRow rowStatusRequestRow = ((StatusRequestRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        JobGroupGUID,
                        JobGUID,
                        MessageType,
                        JobCompletionState};
                rowStatusRequestRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowStatusRequestRow);
                return rowStatusRequestRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                StatusRequestDataTable cln = ((StatusRequestDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new StatusRequestDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnJobGroupGUID = base.Columns["JobGroupGUID"];
                this.columnJobGUID = base.Columns["JobGUID"];
                this.columnMessageType = base.Columns["MessageType"];
                this.columnJobCompletionState = base.Columns["JobCompletionState"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnJobGroupGUID = new global::System.Data.DataColumn("JobGroupGUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobGroupGUID);
                this.columnJobGUID = new global::System.Data.DataColumn("JobGUID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobGUID);
                this.columnMessageType = new global::System.Data.DataColumn("MessageType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMessageType);
                this.columnJobCompletionState = new global::System.Data.DataColumn("JobCompletionState", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnJobCompletionState);
                this.columnMessageType.AllowDBNull = false;
                this.columnMessageType.DefaultValue = ((int)(-1));
                this.columnJobCompletionState.AllowDBNull = false;
                this.columnJobCompletionState.DefaultValue = ((int)(-1));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRequestRow NewStatusRequestRow() {
                return ((StatusRequestRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new StatusRequestRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(StatusRequestRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.StatusRequestRowChanged != null)) {
                    this.StatusRequestRowChanged(this, new StatusRequestRowChangeEvent(((StatusRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.StatusRequestRowChanging != null)) {
                    this.StatusRequestRowChanging(this, new StatusRequestRowChangeEvent(((StatusRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.StatusRequestRowDeleted != null)) {
                    this.StatusRequestRowDeleted(this, new StatusRequestRowChangeEvent(((StatusRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.StatusRequestRowDeleting != null)) {
                    this.StatusRequestRowDeleting(this, new StatusRequestRowChangeEvent(((StatusRequestRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveStatusRequestRow(StatusRequestRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                QueueStatusRequestDataSet ds = new QueueStatusRequestDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "StatusRequestDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class StatusRequestRow : global::System.Data.DataRow {
            
            private StatusRequestDataTable tableStatusRequest;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal StatusRequestRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableStatusRequest = ((StatusRequestDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid JobGroupGUID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStatusRequest.JobGroupGUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobGroupGUID\' in table \'StatusRequest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatusRequest.JobGroupGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid JobGUID {
                get {
                    try {
                        return ((global::System.Guid)(this[this.tableStatusRequest.JobGUIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'JobGUID\' in table \'StatusRequest\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableStatusRequest.JobGUIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int MessageType {
                get {
                    return ((int)(this[this.tableStatusRequest.MessageTypeColumn]));
                }
                set {
                    this[this.tableStatusRequest.MessageTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int JobCompletionState {
                get {
                    return ((int)(this[this.tableStatusRequest.JobCompletionStateColumn]));
                }
                set {
                    this[this.tableStatusRequest.JobCompletionStateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsJobGroupGUIDNull() {
                return this.IsNull(this.tableStatusRequest.JobGroupGUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetJobGroupGUIDNull() {
                this[this.tableStatusRequest.JobGroupGUIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsJobGUIDNull() {
                return this.IsNull(this.tableStatusRequest.JobGUIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetJobGUIDNull() {
                this[this.tableStatusRequest.JobGUIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class StatusRequestRowChangeEvent : global::System.EventArgs {
            
            private StatusRequestRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRequestRowChangeEvent(StatusRequestRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public StatusRequestRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelJobSimpleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void CancelCorrelationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetJobCompletionStateCompletedEventHandler(object sender, GetJobCompletionStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobCompletionStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobCompletionStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public JobState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((JobState)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string errorString {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UnblockCorrelationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RetryJobCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void RetryCorrelationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueuePurgeArchivedJobsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetProposedJobWaitTimeCompletedEventHandler(object sender, GetProposedJobWaitTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProposedJobWaitTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProposedJobWaitTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetJobGroupWaitTimeCompletedEventHandler(object sender, GetJobGroupWaitTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobGroupWaitTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobGroupWaitTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetJobGroupWaitTimeSimpleCompletedEventHandler(object sender, GetJobGroupWaitTimeSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobGroupWaitTimeSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobGroupWaitTimeSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetJobWaitTimeCompletedEventHandler(object sender, GetJobWaitTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobWaitTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobWaitTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadAllJobStatusSimpleCompletedEventHandler(object sender, ReadAllJobStatusSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadAllJobStatusSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadAllJobStatusSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueueStatusDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueueStatusDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadAllJobStatusCompletedEventHandler(object sender, ReadAllJobStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadAllJobStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadAllJobStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueueStatusDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueueStatusDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadProjectJobStatusCompletedEventHandler(object sender, ReadProjectJobStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadProjectJobStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadProjectJobStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueueStatusDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueueStatusDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadMyJobStatusCompletedEventHandler(object sender, ReadMyJobStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadMyJobStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadMyJobStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueueStatusDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueueStatusDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetMyJobCountCompletedEventHandler(object sender, GetMyJobCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMyJobCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMyJobCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadJobStatusCompletedEventHandler(object sender, ReadJobStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadJobStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadJobStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueueStatusDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueueStatusDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadJobStatusSimpleCompletedEventHandler(object sender, ReadJobStatusSimpleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadJobStatusSimpleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadJobStatusSimpleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public QueueStatusDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((QueueStatusDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void GetJobCountCompletedEventHandler(object sender, GetJobCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetJobCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetJobCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadQueueConfigurationCompletedEventHandler(object sender, ReadQueueConfigurationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadQueueConfigurationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadQueueConfigurationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void SetQueueConfigurationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void PurgeQueueStatisticsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591