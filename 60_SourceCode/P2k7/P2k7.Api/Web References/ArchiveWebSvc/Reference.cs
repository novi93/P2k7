//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace P2k7.Api.ArchiveWebSvc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ArchiveSoap", Namespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/")]
    public partial class Archive : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback QueueArchiveProjectsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueArchiveProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueRestoreProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueDeleteArchivedProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadArchivedProjectsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadProjectArchiveRetentionSettingOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReadArchiveScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateArchiveScheduleOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueArchiveResourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueRestoreResourcesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueArchiveCustomFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueRestoreCustomFieldsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueArchiveSystemSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueRestoreSystemSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueArchiveCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueRestoreCategoriesOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueArchiveViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueRestoreViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueArchiveGlobalProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueRestoreGlobalProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueueScheduleArchivesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Archive() {
            this.Url = global::P2k7.Api.Properties.Settings.Default.P2k7_Api_ArchiveWebSvc_Archive;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event QueueArchiveProjectsCompletedEventHandler QueueArchiveProjectsCompleted;
        
        /// <remarks/>
        public event QueueArchiveProjectCompletedEventHandler QueueArchiveProjectCompleted;
        
        /// <remarks/>
        public event QueueRestoreProjectCompletedEventHandler QueueRestoreProjectCompleted;
        
        /// <remarks/>
        public event QueueDeleteArchivedProjectCompletedEventHandler QueueDeleteArchivedProjectCompleted;
        
        /// <remarks/>
        public event ReadArchivedProjectsListCompletedEventHandler ReadArchivedProjectsListCompleted;
        
        /// <remarks/>
        public event ReadProjectArchiveRetentionSettingCompletedEventHandler ReadProjectArchiveRetentionSettingCompleted;
        
        /// <remarks/>
        public event ReadArchiveScheduleCompletedEventHandler ReadArchiveScheduleCompleted;
        
        /// <remarks/>
        public event UpdateArchiveScheduleCompletedEventHandler UpdateArchiveScheduleCompleted;
        
        /// <remarks/>
        public event QueueArchiveResourcesCompletedEventHandler QueueArchiveResourcesCompleted;
        
        /// <remarks/>
        public event QueueRestoreResourcesCompletedEventHandler QueueRestoreResourcesCompleted;
        
        /// <remarks/>
        public event QueueArchiveCustomFieldsCompletedEventHandler QueueArchiveCustomFieldsCompleted;
        
        /// <remarks/>
        public event QueueRestoreCustomFieldsCompletedEventHandler QueueRestoreCustomFieldsCompleted;
        
        /// <remarks/>
        public event QueueArchiveSystemSettingsCompletedEventHandler QueueArchiveSystemSettingsCompleted;
        
        /// <remarks/>
        public event QueueRestoreSystemSettingsCompletedEventHandler QueueRestoreSystemSettingsCompleted;
        
        /// <remarks/>
        public event QueueArchiveCategoriesCompletedEventHandler QueueArchiveCategoriesCompleted;
        
        /// <remarks/>
        public event QueueRestoreCategoriesCompletedEventHandler QueueRestoreCategoriesCompleted;
        
        /// <remarks/>
        public event QueueArchiveViewsCompletedEventHandler QueueArchiveViewsCompleted;
        
        /// <remarks/>
        public event QueueRestoreViewsCompletedEventHandler QueueRestoreViewsCompleted;
        
        /// <remarks/>
        public event QueueArchiveGlobalProjectCompletedEventHandler QueueArchiveGlobalProjectCompleted;
        
        /// <remarks/>
        public event QueueRestoreGlobalProjectCompletedEventHandler QueueRestoreGlobalProjectCompleted;
        
        /// <remarks/>
        public event QueueScheduleArchivesCompletedEventHandler QueueScheduleArchivesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProjects", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueArchiveProjects() {
            this.Invoke("QueueArchiveProjects", new object[0]);
        }
        
        /// <remarks/>
        public void QueueArchiveProjectsAsync() {
            this.QueueArchiveProjectsAsync(null);
        }
        
        /// <remarks/>
        public void QueueArchiveProjectsAsync(object userState) {
            if ((this.QueueArchiveProjectsOperationCompleted == null)) {
                this.QueueArchiveProjectsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueArchiveProjectsOperationCompleted);
            }
            this.InvokeAsync("QueueArchiveProjects", new object[0], this.QueueArchiveProjectsOperationCompleted, userState);
        }
        
        private void OnQueueArchiveProjectsOperationCompleted(object arg) {
            if ((this.QueueArchiveProjectsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueArchiveProjectsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veProject", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid QueueArchiveProject(System.Guid jobUID, System.Guid projectUID, System.Guid archivedProjectUID, string versionDescription, int retentionPolicy, bool permanentArchive) {
            object[] results = this.Invoke("QueueArchiveProject", new object[] {
                        jobUID,
                        projectUID,
                        archivedProjectUID,
                        versionDescription,
                        retentionPolicy,
                        permanentArchive});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void QueueArchiveProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid archivedProjectUID, string versionDescription, int retentionPolicy, bool permanentArchive) {
            this.QueueArchiveProjectAsync(jobUID, projectUID, archivedProjectUID, versionDescription, retentionPolicy, permanentArchive, null);
        }
        
        /// <remarks/>
        public void QueueArchiveProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid archivedProjectUID, string versionDescription, int retentionPolicy, bool permanentArchive, object userState) {
            if ((this.QueueArchiveProjectOperationCompleted == null)) {
                this.QueueArchiveProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueArchiveProjectOperationCompleted);
            }
            this.InvokeAsync("QueueArchiveProject", new object[] {
                        jobUID,
                        projectUID,
                        archivedProjectUID,
                        versionDescription,
                        retentionPolicy,
                        permanentArchive}, this.QueueArchiveProjectOperationCompleted, userState);
        }
        
        private void OnQueueArchiveProjectOperationCompleted(object arg) {
            if ((this.QueueArchiveProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueArchiveProjectCompleted(this, new QueueArchiveProjectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reProject", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueRestoreProject(System.Guid jobUID, System.Guid projectUID, System.Guid versionUID) {
            this.Invoke("QueueRestoreProject", new object[] {
                        jobUID,
                        projectUID,
                        versionUID});
        }
        
        /// <remarks/>
        public void QueueRestoreProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid versionUID) {
            this.QueueRestoreProjectAsync(jobUID, projectUID, versionUID, null);
        }
        
        /// <remarks/>
        public void QueueRestoreProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid versionUID, object userState) {
            if ((this.QueueRestoreProjectOperationCompleted == null)) {
                this.QueueRestoreProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueRestoreProjectOperationCompleted);
            }
            this.InvokeAsync("QueueRestoreProject", new object[] {
                        jobUID,
                        projectUID,
                        versionUID}, this.QueueRestoreProjectOperationCompleted, userState);
        }
        
        private void OnQueueRestoreProjectOperationCompleted(object arg) {
            if ((this.QueueRestoreProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueRestoreProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueDelet" +
            "eArchivedProject", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueDeleteArchivedProject(System.Guid jobUID, System.Guid projectUID, System.Guid archiveUID) {
            this.Invoke("QueueDeleteArchivedProject", new object[] {
                        jobUID,
                        projectUID,
                        archiveUID});
        }
        
        /// <remarks/>
        public void QueueDeleteArchivedProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid archiveUID) {
            this.QueueDeleteArchivedProjectAsync(jobUID, projectUID, archiveUID, null);
        }
        
        /// <remarks/>
        public void QueueDeleteArchivedProjectAsync(System.Guid jobUID, System.Guid projectUID, System.Guid archiveUID, object userState) {
            if ((this.QueueDeleteArchivedProjectOperationCompleted == null)) {
                this.QueueDeleteArchivedProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueDeleteArchivedProjectOperationCompleted);
            }
            this.InvokeAsync("QueueDeleteArchivedProject", new object[] {
                        jobUID,
                        projectUID,
                        archiveUID}, this.QueueDeleteArchivedProjectOperationCompleted, userState);
        }
        
        private void OnQueueDeleteArchivedProjectOperationCompleted(object arg) {
            if ((this.QueueDeleteArchivedProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueDeleteArchivedProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "edProjectsList", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArchivedProjectsDataSet ReadArchivedProjectsList() {
            object[] results = this.Invoke("ReadArchivedProjectsList", new object[0]);
            return ((ArchivedProjectsDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadArchivedProjectsListAsync() {
            this.ReadArchivedProjectsListAsync(null);
        }
        
        /// <remarks/>
        public void ReadArchivedProjectsListAsync(object userState) {
            if ((this.ReadArchivedProjectsListOperationCompleted == null)) {
                this.ReadArchivedProjectsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadArchivedProjectsListOperationCompleted);
            }
            this.InvokeAsync("ReadArchivedProjectsList", new object[0], this.ReadArchivedProjectsListOperationCompleted, userState);
        }
        
        private void OnReadArchivedProjectsListOperationCompleted(object arg) {
            if ((this.ReadArchivedProjectsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadArchivedProjectsListCompleted(this, new ReadArchivedProjectsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadProjec" +
            "tArchiveRetentionSetting", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ProjectArchiveRetentionDataSet ReadProjectArchiveRetentionSetting() {
            object[] results = this.Invoke("ReadProjectArchiveRetentionSetting", new object[0]);
            return ((ProjectArchiveRetentionDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadProjectArchiveRetentionSettingAsync() {
            this.ReadProjectArchiveRetentionSettingAsync(null);
        }
        
        /// <remarks/>
        public void ReadProjectArchiveRetentionSettingAsync(object userState) {
            if ((this.ReadProjectArchiveRetentionSettingOperationCompleted == null)) {
                this.ReadProjectArchiveRetentionSettingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadProjectArchiveRetentionSettingOperationCompleted);
            }
            this.InvokeAsync("ReadProjectArchiveRetentionSetting", new object[0], this.ReadProjectArchiveRetentionSettingOperationCompleted, userState);
        }
        
        private void OnReadProjectArchiveRetentionSettingOperationCompleted(object arg) {
            if ((this.ReadProjectArchiveRetentionSettingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadProjectArchiveRetentionSettingCompleted(this, new ReadProjectArchiveRetentionSettingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/ReadArchiv" +
            "eSchedule", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ArchiveScheduleDataSet ReadArchiveSchedule() {
            object[] results = this.Invoke("ReadArchiveSchedule", new object[0]);
            return ((ArchiveScheduleDataSet)(results[0]));
        }
        
        /// <remarks/>
        public void ReadArchiveScheduleAsync() {
            this.ReadArchiveScheduleAsync(null);
        }
        
        /// <remarks/>
        public void ReadArchiveScheduleAsync(object userState) {
            if ((this.ReadArchiveScheduleOperationCompleted == null)) {
                this.ReadArchiveScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReadArchiveScheduleOperationCompleted);
            }
            this.InvokeAsync("ReadArchiveSchedule", new object[0], this.ReadArchiveScheduleOperationCompleted, userState);
        }
        
        private void OnReadArchiveScheduleOperationCompleted(object arg) {
            if ((this.ReadArchiveScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReadArchiveScheduleCompleted(this, new ReadArchiveScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/UpdateArch" +
            "iveSchedule", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateArchiveSchedule(ArchiveScheduleDataSet scheduleDataSet) {
            this.Invoke("UpdateArchiveSchedule", new object[] {
                        scheduleDataSet});
        }
        
        /// <remarks/>
        public void UpdateArchiveScheduleAsync(ArchiveScheduleDataSet scheduleDataSet) {
            this.UpdateArchiveScheduleAsync(scheduleDataSet, null);
        }
        
        /// <remarks/>
        public void UpdateArchiveScheduleAsync(ArchiveScheduleDataSet scheduleDataSet, object userState) {
            if ((this.UpdateArchiveScheduleOperationCompleted == null)) {
                this.UpdateArchiveScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateArchiveScheduleOperationCompleted);
            }
            this.InvokeAsync("UpdateArchiveSchedule", new object[] {
                        scheduleDataSet}, this.UpdateArchiveScheduleOperationCompleted, userState);
        }
        
        private void OnUpdateArchiveScheduleOperationCompleted(object arg) {
            if ((this.UpdateArchiveScheduleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateArchiveScheduleCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veResources", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueArchiveResources(System.Guid jobUID) {
            this.Invoke("QueueArchiveResources", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueArchiveResourcesAsync(System.Guid jobUID) {
            this.QueueArchiveResourcesAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueArchiveResourcesAsync(System.Guid jobUID, object userState) {
            if ((this.QueueArchiveResourcesOperationCompleted == null)) {
                this.QueueArchiveResourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueArchiveResourcesOperationCompleted);
            }
            this.InvokeAsync("QueueArchiveResources", new object[] {
                        jobUID}, this.QueueArchiveResourcesOperationCompleted, userState);
        }
        
        private void OnQueueArchiveResourcesOperationCompleted(object arg) {
            if ((this.QueueArchiveResourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueArchiveResourcesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reResources", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueRestoreResources(System.Guid jobUID) {
            this.Invoke("QueueRestoreResources", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueRestoreResourcesAsync(System.Guid jobUID) {
            this.QueueRestoreResourcesAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueRestoreResourcesAsync(System.Guid jobUID, object userState) {
            if ((this.QueueRestoreResourcesOperationCompleted == null)) {
                this.QueueRestoreResourcesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueRestoreResourcesOperationCompleted);
            }
            this.InvokeAsync("QueueRestoreResources", new object[] {
                        jobUID}, this.QueueRestoreResourcesOperationCompleted, userState);
        }
        
        private void OnQueueRestoreResourcesOperationCompleted(object arg) {
            if ((this.QueueRestoreResourcesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueRestoreResourcesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCustomFields", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueArchiveCustomFields(System.Guid jobUID) {
            this.Invoke("QueueArchiveCustomFields", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueArchiveCustomFieldsAsync(System.Guid jobUID) {
            this.QueueArchiveCustomFieldsAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueArchiveCustomFieldsAsync(System.Guid jobUID, object userState) {
            if ((this.QueueArchiveCustomFieldsOperationCompleted == null)) {
                this.QueueArchiveCustomFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueArchiveCustomFieldsOperationCompleted);
            }
            this.InvokeAsync("QueueArchiveCustomFields", new object[] {
                        jobUID}, this.QueueArchiveCustomFieldsOperationCompleted, userState);
        }
        
        private void OnQueueArchiveCustomFieldsOperationCompleted(object arg) {
            if ((this.QueueArchiveCustomFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueArchiveCustomFieldsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCustomFields", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueRestoreCustomFields(System.Guid jobUID) {
            this.Invoke("QueueRestoreCustomFields", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueRestoreCustomFieldsAsync(System.Guid jobUID) {
            this.QueueRestoreCustomFieldsAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueRestoreCustomFieldsAsync(System.Guid jobUID, object userState) {
            if ((this.QueueRestoreCustomFieldsOperationCompleted == null)) {
                this.QueueRestoreCustomFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueRestoreCustomFieldsOperationCompleted);
            }
            this.InvokeAsync("QueueRestoreCustomFields", new object[] {
                        jobUID}, this.QueueRestoreCustomFieldsOperationCompleted, userState);
        }
        
        private void OnQueueRestoreCustomFieldsOperationCompleted(object arg) {
            if ((this.QueueRestoreCustomFieldsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueRestoreCustomFieldsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veSystemSettings", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueArchiveSystemSettings(System.Guid jobUID) {
            this.Invoke("QueueArchiveSystemSettings", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueArchiveSystemSettingsAsync(System.Guid jobUID) {
            this.QueueArchiveSystemSettingsAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueArchiveSystemSettingsAsync(System.Guid jobUID, object userState) {
            if ((this.QueueArchiveSystemSettingsOperationCompleted == null)) {
                this.QueueArchiveSystemSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueArchiveSystemSettingsOperationCompleted);
            }
            this.InvokeAsync("QueueArchiveSystemSettings", new object[] {
                        jobUID}, this.QueueArchiveSystemSettingsOperationCompleted, userState);
        }
        
        private void OnQueueArchiveSystemSettingsOperationCompleted(object arg) {
            if ((this.QueueArchiveSystemSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueArchiveSystemSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reSystemSettings", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueRestoreSystemSettings(System.Guid jobUID) {
            this.Invoke("QueueRestoreSystemSettings", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueRestoreSystemSettingsAsync(System.Guid jobUID) {
            this.QueueRestoreSystemSettingsAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueRestoreSystemSettingsAsync(System.Guid jobUID, object userState) {
            if ((this.QueueRestoreSystemSettingsOperationCompleted == null)) {
                this.QueueRestoreSystemSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueRestoreSystemSettingsOperationCompleted);
            }
            this.InvokeAsync("QueueRestoreSystemSettings", new object[] {
                        jobUID}, this.QueueRestoreSystemSettingsOperationCompleted, userState);
        }
        
        private void OnQueueRestoreSystemSettingsOperationCompleted(object arg) {
            if ((this.QueueRestoreSystemSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueRestoreSystemSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veCategories", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueArchiveCategories(System.Guid jobUID) {
            this.Invoke("QueueArchiveCategories", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueArchiveCategoriesAsync(System.Guid jobUID) {
            this.QueueArchiveCategoriesAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueArchiveCategoriesAsync(System.Guid jobUID, object userState) {
            if ((this.QueueArchiveCategoriesOperationCompleted == null)) {
                this.QueueArchiveCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueArchiveCategoriesOperationCompleted);
            }
            this.InvokeAsync("QueueArchiveCategories", new object[] {
                        jobUID}, this.QueueArchiveCategoriesOperationCompleted, userState);
        }
        
        private void OnQueueArchiveCategoriesOperationCompleted(object arg) {
            if ((this.QueueArchiveCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueArchiveCategoriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reCategories", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueRestoreCategories(System.Guid jobUID) {
            this.Invoke("QueueRestoreCategories", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueRestoreCategoriesAsync(System.Guid jobUID) {
            this.QueueRestoreCategoriesAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueRestoreCategoriesAsync(System.Guid jobUID, object userState) {
            if ((this.QueueRestoreCategoriesOperationCompleted == null)) {
                this.QueueRestoreCategoriesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueRestoreCategoriesOperationCompleted);
            }
            this.InvokeAsync("QueueRestoreCategories", new object[] {
                        jobUID}, this.QueueRestoreCategoriesOperationCompleted, userState);
        }
        
        private void OnQueueRestoreCategoriesOperationCompleted(object arg) {
            if ((this.QueueRestoreCategoriesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueRestoreCategoriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veViews", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueArchiveViews(System.Guid jobUID) {
            this.Invoke("QueueArchiveViews", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueArchiveViewsAsync(System.Guid jobUID) {
            this.QueueArchiveViewsAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueArchiveViewsAsync(System.Guid jobUID, object userState) {
            if ((this.QueueArchiveViewsOperationCompleted == null)) {
                this.QueueArchiveViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueArchiveViewsOperationCompleted);
            }
            this.InvokeAsync("QueueArchiveViews", new object[] {
                        jobUID}, this.QueueArchiveViewsOperationCompleted, userState);
        }
        
        private void OnQueueArchiveViewsOperationCompleted(object arg) {
            if ((this.QueueArchiveViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueArchiveViewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reViews", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueRestoreViews(System.Guid jobUID) {
            this.Invoke("QueueRestoreViews", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueRestoreViewsAsync(System.Guid jobUID) {
            this.QueueRestoreViewsAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueRestoreViewsAsync(System.Guid jobUID, object userState) {
            if ((this.QueueRestoreViewsOperationCompleted == null)) {
                this.QueueRestoreViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueRestoreViewsOperationCompleted);
            }
            this.InvokeAsync("QueueRestoreViews", new object[] {
                        jobUID}, this.QueueRestoreViewsOperationCompleted, userState);
        }
        
        private void OnQueueRestoreViewsOperationCompleted(object arg) {
            if ((this.QueueRestoreViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueRestoreViewsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueArchi" +
            "veGlobalProject", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueArchiveGlobalProject(System.Guid jobUID) {
            this.Invoke("QueueArchiveGlobalProject", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueArchiveGlobalProjectAsync(System.Guid jobUID) {
            this.QueueArchiveGlobalProjectAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueArchiveGlobalProjectAsync(System.Guid jobUID, object userState) {
            if ((this.QueueArchiveGlobalProjectOperationCompleted == null)) {
                this.QueueArchiveGlobalProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueArchiveGlobalProjectOperationCompleted);
            }
            this.InvokeAsync("QueueArchiveGlobalProject", new object[] {
                        jobUID}, this.QueueArchiveGlobalProjectOperationCompleted, userState);
        }
        
        private void OnQueueArchiveGlobalProjectOperationCompleted(object arg) {
            if ((this.QueueArchiveGlobalProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueArchiveGlobalProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueResto" +
            "reGlobalProject", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueRestoreGlobalProject(System.Guid jobUID) {
            this.Invoke("QueueRestoreGlobalProject", new object[] {
                        jobUID});
        }
        
        /// <remarks/>
        public void QueueRestoreGlobalProjectAsync(System.Guid jobUID) {
            this.QueueRestoreGlobalProjectAsync(jobUID, null);
        }
        
        /// <remarks/>
        public void QueueRestoreGlobalProjectAsync(System.Guid jobUID, object userState) {
            if ((this.QueueRestoreGlobalProjectOperationCompleted == null)) {
                this.QueueRestoreGlobalProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueRestoreGlobalProjectOperationCompleted);
            }
            this.InvokeAsync("QueueRestoreGlobalProject", new object[] {
                        jobUID}, this.QueueRestoreGlobalProjectOperationCompleted, userState);
        }
        
        private void OnQueueRestoreGlobalProjectOperationCompleted(object arg) {
            if ((this.QueueRestoreGlobalProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueRestoreGlobalProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://schemas.microsoft.com/office/project/server/webservices/Archive/QueueSched" +
            "uleArchives", RequestNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", ResponseNamespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void QueueScheduleArchives(ArchiveOpcode opCode) {
            this.Invoke("QueueScheduleArchives", new object[] {
                        opCode});
        }
        
        /// <remarks/>
        public void QueueScheduleArchivesAsync(ArchiveOpcode opCode) {
            this.QueueScheduleArchivesAsync(opCode, null);
        }
        
        /// <remarks/>
        public void QueueScheduleArchivesAsync(ArchiveOpcode opCode, object userState) {
            if ((this.QueueScheduleArchivesOperationCompleted == null)) {
                this.QueueScheduleArchivesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueueScheduleArchivesOperationCompleted);
            }
            this.InvokeAsync("QueueScheduleArchives", new object[] {
                        opCode}, this.QueueScheduleArchivesOperationCompleted, userState);
        }
        
        private void OnQueueScheduleArchivesOperationCompleted(object arg) {
            if ((this.QueueScheduleArchivesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueueScheduleArchivesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ArchivedProjectsDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    public partial class ArchivedProjectsDataSet : global::System.Data.DataSet {
        
        private ProjectsDataTable tableProjects;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ArchivedProjectsDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected ArchivedProjectsDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Projects"] != null)) {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProjectsDataTable Projects {
            get {
                return this.tableProjects;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ArchivedProjectsDataSet cln = ((ArchivedProjectsDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Projects"] != null)) {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProjects = ((ProjectsDataTable)(base.Tables["Projects"]));
            if ((initTable == true)) {
                if ((this.tableProjects != null)) {
                    this.tableProjects.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ArchivedProjectsDataSet";
            this.Prefix = "";
            this.Namespace = "http://schemas.microsoft.com/office/project/server/webservices/ArchivedProjectsDa" +
                "taSet/";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProjects = new ProjectsDataTable();
            base.Tables.Add(this.tableProjects);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeProjects() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ArchivedProjectsDataSet ds = new ArchivedProjectsDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ProjectsRowChangeEventHandler(object sender, ProjectsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProjectsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPROJ_VERSION_UID;
            
            private global::System.Data.DataColumn columnPROJ_UID;
            
            private global::System.Data.DataColumn columnPROJ_NAME;
            
            private global::System.Data.DataColumn columnPROJ_VERSION_DESCRIPTION;
            
            private global::System.Data.DataColumn columnPROJ_VERSION_DATE;
            
            private global::System.Data.DataColumn columnPROJ_VERSION_IS_PERMANENT;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsDataTable() {
                this.TableName = "Projects";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ProjectsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ProjectsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROJ_VERSION_UIDColumn {
                get {
                    return this.columnPROJ_VERSION_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROJ_UIDColumn {
                get {
                    return this.columnPROJ_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROJ_NAMEColumn {
                get {
                    return this.columnPROJ_NAME;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROJ_VERSION_DESCRIPTIONColumn {
                get {
                    return this.columnPROJ_VERSION_DESCRIPTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROJ_VERSION_DATEColumn {
                get {
                    return this.columnPROJ_VERSION_DATE;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROJ_VERSION_IS_PERMANENTColumn {
                get {
                    return this.columnPROJ_VERSION_IS_PERMANENT;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow this[int index] {
                get {
                    return ((ProjectsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddProjectsRow(ProjectsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow AddProjectsRow(System.Guid PROJ_VERSION_UID, System.Guid PROJ_UID, string PROJ_NAME, string PROJ_VERSION_DESCRIPTION, System.DateTime PROJ_VERSION_DATE, bool PROJ_VERSION_IS_PERMANENT) {
                ProjectsRow rowProjectsRow = ((ProjectsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PROJ_VERSION_UID,
                        PROJ_UID,
                        PROJ_NAME,
                        PROJ_VERSION_DESCRIPTION,
                        PROJ_VERSION_DATE,
                        PROJ_VERSION_IS_PERMANENT};
                rowProjectsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProjectsRow);
                return rowProjectsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow FindByPROJ_UID(System.Guid PROJ_UID) {
                return ((ProjectsRow)(this.Rows.Find(new object[] {
                            PROJ_UID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProjectsDataTable cln = ((ProjectsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProjectsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPROJ_VERSION_UID = base.Columns["PROJ_VERSION_UID"];
                this.columnPROJ_UID = base.Columns["PROJ_UID"];
                this.columnPROJ_NAME = base.Columns["PROJ_NAME"];
                this.columnPROJ_VERSION_DESCRIPTION = base.Columns["PROJ_VERSION_DESCRIPTION"];
                this.columnPROJ_VERSION_DATE = base.Columns["PROJ_VERSION_DATE"];
                this.columnPROJ_VERSION_IS_PERMANENT = base.Columns["PROJ_VERSION_IS_PERMANENT"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPROJ_VERSION_UID = new global::System.Data.DataColumn("PROJ_VERSION_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_VERSION_UID);
                this.columnPROJ_UID = new global::System.Data.DataColumn("PROJ_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_UID);
                this.columnPROJ_NAME = new global::System.Data.DataColumn("PROJ_NAME", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_NAME);
                this.columnPROJ_VERSION_DESCRIPTION = new global::System.Data.DataColumn("PROJ_VERSION_DESCRIPTION", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_VERSION_DESCRIPTION);
                this.columnPROJ_VERSION_DATE = new global::System.Data.DataColumn("PROJ_VERSION_DATE", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_VERSION_DATE);
                this.columnPROJ_VERSION_IS_PERMANENT = new global::System.Data.DataColumn("PROJ_VERSION_IS_PERMANENT", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_VERSION_IS_PERMANENT);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("ArchivedProjectsDataSetKey1", new global::System.Data.DataColumn[] {
                                this.columnPROJ_UID}, true));
                this.columnPROJ_VERSION_UID.AllowDBNull = false;
                this.columnPROJ_UID.AllowDBNull = false;
                this.columnPROJ_UID.Unique = true;
                this.columnPROJ_VERSION_DATE.AllowDBNull = false;
                this.columnPROJ_VERSION_IS_PERMANENT.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow NewProjectsRow() {
                return ((ProjectsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProjectsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProjectsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProjectsRowChanged != null)) {
                    this.ProjectsRowChanged(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProjectsRowChanging != null)) {
                    this.ProjectsRowChanging(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProjectsRowDeleted != null)) {
                    this.ProjectsRowDeleted(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProjectsRowDeleting != null)) {
                    this.ProjectsRowDeleting(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveProjectsRow(ProjectsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ArchivedProjectsDataSet ds = new ArchivedProjectsDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProjectsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProjectsRow : global::System.Data.DataRow {
            
            private ProjectsDataTable tableProjects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ProjectsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProjects = ((ProjectsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid PROJ_VERSION_UID {
                get {
                    return ((global::System.Guid)(this[this.tableProjects.PROJ_VERSION_UIDColumn]));
                }
                set {
                    this[this.tableProjects.PROJ_VERSION_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid PROJ_UID {
                get {
                    return ((global::System.Guid)(this[this.tableProjects.PROJ_UIDColumn]));
                }
                set {
                    this[this.tableProjects.PROJ_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROJ_NAME {
                get {
                    try {
                        return ((string)(this[this.tableProjects.PROJ_NAMEColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROJ_NAME\' in table \'Projects\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProjects.PROJ_NAMEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public string PROJ_VERSION_DESCRIPTION {
                get {
                    try {
                        return ((string)(this[this.tableProjects.PROJ_VERSION_DESCRIPTIONColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PROJ_VERSION_DESCRIPTION\' in table \'Projects\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProjects.PROJ_VERSION_DESCRIPTIONColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.DateTime PROJ_VERSION_DATE {
                get {
                    return ((global::System.DateTime)(this[this.tableProjects.PROJ_VERSION_DATEColumn]));
                }
                set {
                    this[this.tableProjects.PROJ_VERSION_DATEColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool PROJ_VERSION_IS_PERMANENT {
                get {
                    return ((bool)(this[this.tableProjects.PROJ_VERSION_IS_PERMANENTColumn]));
                }
                set {
                    this[this.tableProjects.PROJ_VERSION_IS_PERMANENTColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPROJ_NAMENull() {
                return this.IsNull(this.tableProjects.PROJ_NAMEColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPROJ_NAMENull() {
                this[this.tableProjects.PROJ_NAMEColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public bool IsPROJ_VERSION_DESCRIPTIONNull() {
                return this.IsNull(this.tableProjects.PROJ_VERSION_DESCRIPTIONColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void SetPROJ_VERSION_DESCRIPTIONNull() {
                this[this.tableProjects.PROJ_VERSION_DESCRIPTIONColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ProjectsRowChangeEvent : global::System.EventArgs {
            
            private ProjectsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRowChangeEvent(ProjectsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ProjectArchiveRetentionDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    public partial class ProjectArchiveRetentionDataSet : global::System.Data.DataSet {
        
        private ProjectsDataTable tableProjects;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ProjectArchiveRetentionDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected ProjectArchiveRetentionDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Projects"] != null)) {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProjectsDataTable Projects {
            get {
                return this.tableProjects;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ProjectArchiveRetentionDataSet cln = ((ProjectArchiveRetentionDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Projects"] != null)) {
                    base.Tables.Add(new ProjectsDataTable(ds.Tables["Projects"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableProjects = ((ProjectsDataTable)(base.Tables["Projects"]));
            if ((initTable == true)) {
                if ((this.tableProjects != null)) {
                    this.tableProjects.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ProjectArchiveRetentionDataSet";
            this.Prefix = "";
            this.Namespace = "http://schemas.microsoft.com/office/project/server/webservices/ProjectArchiveRete" +
                "ntionDataSet/";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProjects = new ProjectsDataTable();
            base.Tables.Add(this.tableProjects);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeProjects() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ProjectArchiveRetentionDataSet ds = new ProjectArchiveRetentionDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ProjectsRowChangeEventHandler(object sender, ProjectsRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProjectsDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnPROJ_UID;
            
            private global::System.Data.DataColumn columnPROJ_ARCHIVE_RETENTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsDataTable() {
                this.TableName = "Projects";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ProjectsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ProjectsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROJ_UIDColumn {
                get {
                    return this.columnPROJ_UID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn PROJ_ARCHIVE_RETENTIONColumn {
                get {
                    return this.columnPROJ_ARCHIVE_RETENTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow this[int index] {
                get {
                    return ((ProjectsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ProjectsRowChangeEventHandler ProjectsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddProjectsRow(ProjectsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow AddProjectsRow(System.Guid PROJ_UID, int PROJ_ARCHIVE_RETENTION) {
                ProjectsRow rowProjectsRow = ((ProjectsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PROJ_UID,
                        PROJ_ARCHIVE_RETENTION};
                rowProjectsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProjectsRow);
                return rowProjectsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow FindByPROJ_UID(System.Guid PROJ_UID) {
                return ((ProjectsRow)(this.Rows.Find(new object[] {
                            PROJ_UID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ProjectsDataTable cln = ((ProjectsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ProjectsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnPROJ_UID = base.Columns["PROJ_UID"];
                this.columnPROJ_ARCHIVE_RETENTION = base.Columns["PROJ_ARCHIVE_RETENTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnPROJ_UID = new global::System.Data.DataColumn("PROJ_UID", typeof(global::System.Guid), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_UID);
                this.columnPROJ_ARCHIVE_RETENTION = new global::System.Data.DataColumn("PROJ_ARCHIVE_RETENTION", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPROJ_ARCHIVE_RETENTION);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("ProjectArchiveRetentionDataSetKey1", new global::System.Data.DataColumn[] {
                                this.columnPROJ_UID}, true));
                this.columnPROJ_UID.AllowDBNull = false;
                this.columnPROJ_UID.Unique = true;
                this.columnPROJ_ARCHIVE_RETENTION.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow NewProjectsRow() {
                return ((ProjectsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ProjectsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ProjectsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProjectsRowChanged != null)) {
                    this.ProjectsRowChanged(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProjectsRowChanging != null)) {
                    this.ProjectsRowChanging(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProjectsRowDeleted != null)) {
                    this.ProjectsRowDeleted(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProjectsRowDeleting != null)) {
                    this.ProjectsRowDeleting(this, new ProjectsRowChangeEvent(((ProjectsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveProjectsRow(ProjectsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ProjectArchiveRetentionDataSet ds = new ProjectArchiveRetentionDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProjectsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ProjectsRow : global::System.Data.DataRow {
            
            private ProjectsDataTable tableProjects;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ProjectsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProjects = ((ProjectsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public System.Guid PROJ_UID {
                get {
                    return ((global::System.Guid)(this[this.tableProjects.PROJ_UIDColumn]));
                }
                set {
                    this[this.tableProjects.PROJ_UIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public int PROJ_ARCHIVE_RETENTION {
                get {
                    return ((int)(this[this.tableProjects.PROJ_ARCHIVE_RETENTIONColumn]));
                }
                set {
                    this[this.tableProjects.PROJ_ARCHIVE_RETENTIONColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ProjectsRowChangeEvent : global::System.EventArgs {
            
            private ProjectsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRowChangeEvent(ProjectsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ProjectsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    // This type definition was generated by System.Data.Design.TypedDataSetSchemaImporterExtension schema importer extension.
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("ArchiveScheduleDataSet")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    public partial class ArchiveScheduleDataSet : global::System.Data.DataSet {
        
        private ArchiveScheduleDataTable tableArchiveSchedule;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public ArchiveScheduleDataSet() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected ArchiveScheduleDataSet(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["ArchiveSchedule"] != null)) {
                    base.Tables.Add(new ArchiveScheduleDataTable(ds.Tables["ArchiveSchedule"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ArchiveScheduleDataTable ArchiveSchedule {
            get {
                return this.tableArchiveSchedule;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            ArchiveScheduleDataSet cln = ((ArchiveScheduleDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ArchiveSchedule"] != null)) {
                    base.Tables.Add(new ArchiveScheduleDataTable(ds.Tables["ArchiveSchedule"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableArchiveSchedule = ((ArchiveScheduleDataTable)(base.Tables["ArchiveSchedule"]));
            if ((initTable == true)) {
                if ((this.tableArchiveSchedule != null)) {
                    this.tableArchiveSchedule.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void InitClass() {
            this.DataSetName = "ArchiveScheduleDataSet";
            this.Prefix = "";
            this.Namespace = "http://schemas.microsoft.com/office/project/server/webservices/ArchiveScheduleDat" +
                "aSet/";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableArchiveSchedule = new ArchiveScheduleDataTable();
            base.Tables.Add(this.tableArchiveSchedule);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private bool ShouldSerializeArchiveSchedule() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            ArchiveScheduleDataSet ds = new ArchiveScheduleDataSet();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public delegate void ArchiveScheduleRowChangeEventHandler(object sender, ArchiveScheduleRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ArchiveScheduleDataTable : global::System.Data.DataTable, global::System.Collections.IEnumerable {
            
            private global::System.Data.DataColumn columnWADMIN_PROJECTS;
            
            private global::System.Data.DataColumn columnWADMIN_ENTERPRISE_RESOURCE_POOL;
            
            private global::System.Data.DataColumn columnWADMIN_ENTERPRISE_CUSTOM_FIELDS;
            
            private global::System.Data.DataColumn columnWADMIN_ENTERPRISE_GLOBAL;
            
            private global::System.Data.DataColumn columnWADMIN_SYSTEM_SETTINGS;
            
            private global::System.Data.DataColumn columnWADMIN_CATEGORY_GROUP;
            
            private global::System.Data.DataColumn columnWADMIN_VIEW_DEFINITIONS;
            
            private global::System.Data.DataColumn columnWADMIN_ARCHIVE_RETENTION;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ArchiveScheduleDataTable() {
                this.TableName = "ArchiveSchedule";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ArchiveScheduleDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected ArchiveScheduleDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WADMIN_PROJECTSColumn {
                get {
                    return this.columnWADMIN_PROJECTS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WADMIN_ENTERPRISE_RESOURCE_POOLColumn {
                get {
                    return this.columnWADMIN_ENTERPRISE_RESOURCE_POOL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WADMIN_ENTERPRISE_CUSTOM_FIELDSColumn {
                get {
                    return this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WADMIN_ENTERPRISE_GLOBALColumn {
                get {
                    return this.columnWADMIN_ENTERPRISE_GLOBAL;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WADMIN_SYSTEM_SETTINGSColumn {
                get {
                    return this.columnWADMIN_SYSTEM_SETTINGS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WADMIN_CATEGORY_GROUPColumn {
                get {
                    return this.columnWADMIN_CATEGORY_GROUP;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WADMIN_VIEW_DEFINITIONSColumn {
                get {
                    return this.columnWADMIN_VIEW_DEFINITIONS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataColumn WADMIN_ARCHIVE_RETENTIONColumn {
                get {
                    return this.columnWADMIN_ARCHIVE_RETENTION;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ArchiveScheduleRow this[int index] {
                get {
                    return ((ArchiveScheduleRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ArchiveScheduleRowChangeEventHandler ArchiveScheduleRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ArchiveScheduleRowChangeEventHandler ArchiveScheduleRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ArchiveScheduleRowChangeEventHandler ArchiveScheduleRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public event ArchiveScheduleRowChangeEventHandler ArchiveScheduleRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void AddArchiveScheduleRow(ArchiveScheduleRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ArchiveScheduleRow AddArchiveScheduleRow(long WADMIN_PROJECTS, long WADMIN_ENTERPRISE_RESOURCE_POOL, long WADMIN_ENTERPRISE_CUSTOM_FIELDS, long WADMIN_ENTERPRISE_GLOBAL, long WADMIN_SYSTEM_SETTINGS, long WADMIN_CATEGORY_GROUP, long WADMIN_VIEW_DEFINITIONS, long WADMIN_ARCHIVE_RETENTION) {
                ArchiveScheduleRow rowArchiveScheduleRow = ((ArchiveScheduleRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        WADMIN_PROJECTS,
                        WADMIN_ENTERPRISE_RESOURCE_POOL,
                        WADMIN_ENTERPRISE_CUSTOM_FIELDS,
                        WADMIN_ENTERPRISE_GLOBAL,
                        WADMIN_SYSTEM_SETTINGS,
                        WADMIN_CATEGORY_GROUP,
                        WADMIN_VIEW_DEFINITIONS,
                        WADMIN_ARCHIVE_RETENTION};
                rowArchiveScheduleRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowArchiveScheduleRow);
                return rowArchiveScheduleRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public virtual global::System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ArchiveScheduleDataTable cln = ((ArchiveScheduleDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ArchiveScheduleDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal void InitVars() {
                this.columnWADMIN_PROJECTS = base.Columns["WADMIN_PROJECTS"];
                this.columnWADMIN_ENTERPRISE_RESOURCE_POOL = base.Columns["WADMIN_ENTERPRISE_RESOURCE_POOL"];
                this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS = base.Columns["WADMIN_ENTERPRISE_CUSTOM_FIELDS"];
                this.columnWADMIN_ENTERPRISE_GLOBAL = base.Columns["WADMIN_ENTERPRISE_GLOBAL"];
                this.columnWADMIN_SYSTEM_SETTINGS = base.Columns["WADMIN_SYSTEM_SETTINGS"];
                this.columnWADMIN_CATEGORY_GROUP = base.Columns["WADMIN_CATEGORY_GROUP"];
                this.columnWADMIN_VIEW_DEFINITIONS = base.Columns["WADMIN_VIEW_DEFINITIONS"];
                this.columnWADMIN_ARCHIVE_RETENTION = base.Columns["WADMIN_ARCHIVE_RETENTION"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            private void InitClass() {
                this.columnWADMIN_PROJECTS = new global::System.Data.DataColumn("WADMIN_PROJECTS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_PROJECTS);
                this.columnWADMIN_ENTERPRISE_RESOURCE_POOL = new global::System.Data.DataColumn("WADMIN_ENTERPRISE_RESOURCE_POOL", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_ENTERPRISE_RESOURCE_POOL);
                this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS = new global::System.Data.DataColumn("WADMIN_ENTERPRISE_CUSTOM_FIELDS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS);
                this.columnWADMIN_ENTERPRISE_GLOBAL = new global::System.Data.DataColumn("WADMIN_ENTERPRISE_GLOBAL", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_ENTERPRISE_GLOBAL);
                this.columnWADMIN_SYSTEM_SETTINGS = new global::System.Data.DataColumn("WADMIN_SYSTEM_SETTINGS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_SYSTEM_SETTINGS);
                this.columnWADMIN_CATEGORY_GROUP = new global::System.Data.DataColumn("WADMIN_CATEGORY_GROUP", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_CATEGORY_GROUP);
                this.columnWADMIN_VIEW_DEFINITIONS = new global::System.Data.DataColumn("WADMIN_VIEW_DEFINITIONS", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_VIEW_DEFINITIONS);
                this.columnWADMIN_ARCHIVE_RETENTION = new global::System.Data.DataColumn("WADMIN_ARCHIVE_RETENTION", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnWADMIN_ARCHIVE_RETENTION);
                this.columnWADMIN_PROJECTS.AllowDBNull = false;
                this.columnWADMIN_PROJECTS.DefaultValue = ((long)(0));
                this.columnWADMIN_ENTERPRISE_RESOURCE_POOL.AllowDBNull = false;
                this.columnWADMIN_ENTERPRISE_RESOURCE_POOL.DefaultValue = ((long)(0));
                this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS.AllowDBNull = false;
                this.columnWADMIN_ENTERPRISE_CUSTOM_FIELDS.DefaultValue = ((long)(0));
                this.columnWADMIN_ENTERPRISE_GLOBAL.AllowDBNull = false;
                this.columnWADMIN_ENTERPRISE_GLOBAL.DefaultValue = ((long)(0));
                this.columnWADMIN_SYSTEM_SETTINGS.AllowDBNull = false;
                this.columnWADMIN_SYSTEM_SETTINGS.DefaultValue = ((long)(0));
                this.columnWADMIN_CATEGORY_GROUP.AllowDBNull = false;
                this.columnWADMIN_CATEGORY_GROUP.DefaultValue = ((long)(0));
                this.columnWADMIN_VIEW_DEFINITIONS.AllowDBNull = false;
                this.columnWADMIN_VIEW_DEFINITIONS.DefaultValue = ((long)(0));
                this.columnWADMIN_ARCHIVE_RETENTION.AllowDBNull = false;
                this.columnWADMIN_ARCHIVE_RETENTION.DefaultValue = ((long)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ArchiveScheduleRow NewArchiveScheduleRow() {
                return ((ArchiveScheduleRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ArchiveScheduleRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ArchiveScheduleRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ArchiveScheduleRowChanged != null)) {
                    this.ArchiveScheduleRowChanged(this, new ArchiveScheduleRowChangeEvent(((ArchiveScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ArchiveScheduleRowChanging != null)) {
                    this.ArchiveScheduleRowChanging(this, new ArchiveScheduleRowChangeEvent(((ArchiveScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ArchiveScheduleRowDeleted != null)) {
                    this.ArchiveScheduleRowDeleted(this, new ArchiveScheduleRowChangeEvent(((ArchiveScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ArchiveScheduleRowDeleting != null)) {
                    this.ArchiveScheduleRowDeleting(this, new ArchiveScheduleRowChangeEvent(((ArchiveScheduleRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public void RemoveArchiveScheduleRow(ArchiveScheduleRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                ArchiveScheduleDataSet ds = new ArchiveScheduleDataSet();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ArchiveScheduleDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ArchiveScheduleRow : global::System.Data.DataRow {
            
            private ArchiveScheduleDataTable tableArchiveSchedule;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            internal ArchiveScheduleRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableArchiveSchedule = ((ArchiveScheduleDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long WADMIN_PROJECTS {
                get {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_PROJECTSColumn]));
                }
                set {
                    this[this.tableArchiveSchedule.WADMIN_PROJECTSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long WADMIN_ENTERPRISE_RESOURCE_POOL {
                get {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_RESOURCE_POOLColumn]));
                }
                set {
                    this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_RESOURCE_POOLColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long WADMIN_ENTERPRISE_CUSTOM_FIELDS {
                get {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_CUSTOM_FIELDSColumn]));
                }
                set {
                    this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_CUSTOM_FIELDSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long WADMIN_ENTERPRISE_GLOBAL {
                get {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_GLOBALColumn]));
                }
                set {
                    this[this.tableArchiveSchedule.WADMIN_ENTERPRISE_GLOBALColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long WADMIN_SYSTEM_SETTINGS {
                get {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_SYSTEM_SETTINGSColumn]));
                }
                set {
                    this[this.tableArchiveSchedule.WADMIN_SYSTEM_SETTINGSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long WADMIN_CATEGORY_GROUP {
                get {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_CATEGORY_GROUPColumn]));
                }
                set {
                    this[this.tableArchiveSchedule.WADMIN_CATEGORY_GROUPColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long WADMIN_VIEW_DEFINITIONS {
                get {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_VIEW_DEFINITIONSColumn]));
                }
                set {
                    this[this.tableArchiveSchedule.WADMIN_VIEW_DEFINITIONSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public long WADMIN_ARCHIVE_RETENTION {
                get {
                    return ((long)(this[this.tableArchiveSchedule.WADMIN_ARCHIVE_RETENTIONColumn]));
                }
                set {
                    this[this.tableArchiveSchedule.WADMIN_ARCHIVE_RETENTIONColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
        public class ArchiveScheduleRowChangeEvent : global::System.EventArgs {
            
            private ArchiveScheduleRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ArchiveScheduleRowChangeEvent(ArchiveScheduleRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public ArchiveScheduleRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.3761.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/office/project/server/webservices/Archive/")]
    public enum ArchiveOpcode {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        Projects,
        
        /// <remarks/>
        Resources,
        
        /// <remarks/>
        CustomFields,
        
        /// <remarks/>
        EnterpriseGlobal,
        
        /// <remarks/>
        SystemSettings,
        
        /// <remarks/>
        Categories,
        
        /// <remarks/>
        ViewDefinitions,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueArchiveProjectsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueArchiveProjectCompletedEventHandler(object sender, QueueArchiveProjectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueueArchiveProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueueArchiveProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueRestoreProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueDeleteArchivedProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadArchivedProjectsListCompletedEventHandler(object sender, ReadArchivedProjectsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadArchivedProjectsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadArchivedProjectsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArchivedProjectsDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArchivedProjectsDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadProjectArchiveRetentionSettingCompletedEventHandler(object sender, ReadProjectArchiveRetentionSettingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadProjectArchiveRetentionSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadProjectArchiveRetentionSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ProjectArchiveRetentionDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ProjectArchiveRetentionDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void ReadArchiveScheduleCompletedEventHandler(object sender, ReadArchiveScheduleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReadArchiveScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReadArchiveScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ArchiveScheduleDataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ArchiveScheduleDataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void UpdateArchiveScheduleCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueArchiveResourcesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueRestoreResourcesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueArchiveCustomFieldsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueRestoreCustomFieldsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueArchiveSystemSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueRestoreSystemSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueArchiveCategoriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueRestoreCategoriesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueArchiveViewsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueRestoreViewsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueArchiveGlobalProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueRestoreGlobalProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void QueueScheduleArchivesCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591